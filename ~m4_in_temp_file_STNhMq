m4_init()
m4_define([b4_mergers], 
[[]])

m4_define([b4_symbol_numbers],


m4_define([b4_type_names],
[[0, 1, 2, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 93, 95, 104],
[6],
[3],
[68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107],
[4, 5, 7]])

m4_define([b4_actions], 
[b4_case(2, [b4_syncline(168, [["Tig.y"]])
[    { CodeObj.Encode(]b4_rhs_value(2, 2, [[nPtr]])[); FreeNode(]b4_rhs_value(2, 2, [[nPtr]])[); }]])

b4_case(3, [b4_syncline(169, [["Tig.y"]])
[    { CodeObj.AppendGlobal(]b4_rhs_value(2, 2, [[nPtr]])[); }]])

b4_case(5, [b4_syncline(179, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = ]b4_rhs_value(1, 1, [[nPtr]])[; }]])

b4_case(6, [b4_syncline(183, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.ClassIdNode(]b4_rhs_value(1, 1, [[str]])[); }]])

b4_case(7, [b4_syncline(187, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = ]b4_rhs_value(1, 1, [[nPtr]])[;}]])

b4_case(8, [b4_syncline(188, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[  = SyntaxObj.Operator(';', 2, ]b4_rhs_value(3, 1, [[nPtr]])[, ]b4_rhs_value(3, 3, [[nPtr]])[); }]])

b4_case(9, [b4_syncline(192, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(INIT_STACK, 2, ]b4_rhs_value(2, 1, [[nPtr]])[, ]b4_rhs_value(2, 2, [[nPtr]])[);}]])

b4_case(10, [b4_syncline(196, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = InitMemberNode(]b4_rhs_value(1, 1, [[str]])[);  }]])

b4_case(11, [b4_syncline(200, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.CreateFnDefNode( ]b4_rhs_value(4, 1, [[nPtr]])[, ]b4_rhs_value(4, 3, [[nPtr]])[); SymbTable.ClearCurrentFn(); }]])

b4_case(12, [b4_syncline(201, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.CreateFnDefNode( ]b4_rhs_value(3, 1, [[nPtr]])[, NULL); SymbTable.ClearCurrentFn();}]])

b4_case(13, [b4_syncline(202, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = ClassOpNode( ]b4_rhs_value(5, 2, [[nPtr]])[,NULL, ]b4_rhs_value(5, 4, [[nPtr]])[,0);NoParents = 0; }]])

b4_case(14, [b4_syncline(203, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = ClassOpNode( ]b4_rhs_value(6, 2, [[nPtr]])[,]b4_rhs_value(6, 3, [[nPtr]])[, ]b4_rhs_value(6, 5, [[nPtr]])[, NoParents); NoParents = 0; SyntaxObj.TotalMembs = 0;}]])

b4_case(15, [b4_syncline(212, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = ]b4_rhs_value(4, 1, [[nPtr]])[; }]])

b4_case(16, [b4_syncline(213, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = ]b4_rhs_value(3, 1, [[nPtr]])[;  }]])

b4_case(17, [b4_syncline(217, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.CreateGlobalFnNameNode(]b4_rhs_value(1, 1, [[str]])[); }]])

b4_case(18, [b4_syncline(221, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = ]b4_rhs_value(1, 1, [[nPtr]])[; }]])

b4_case(19, [b4_syncline(222, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = ]b4_rhs_value(3, 3, [[nPtr]])[; }]])

b4_case(20, [b4_syncline(226, [["Tig.y"]])
[    { DeclParam(]b4_rhs_value(1, 1, [[str]])[,NULL); }]])

b4_case(21, [b4_syncline(232, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = DeclClassNode(]b4_rhs_value(1, 1, [[str]])[); }]])

b4_case(22, [b4_syncline(236, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = ]b4_rhs_value(2, 2, [[nPtr]])[;}]])

b4_case(23, [b4_syncline(240, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.ClassIdNode(]b4_rhs_value(1, 1, [[str]])[); NoParents++; AddParentToCurrentClass(]b4_rhs_value(1, 1, [[str]])[);}]])

b4_case(24, [b4_syncline(241, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(';', 2, ]b4_rhs_value(3, 1, [[nPtr]])[, SyntaxObj.ClassIdNode(]b4_rhs_value(3, 3, [[str]])[)); NoParents++; AddParentToCurrentClass(]b4_rhs_value(3, 3, [[str]])[);}]])

b4_case(25, [b4_syncline(247, [["Tig.y"]])
[    { DeclDataMember(]b4_rhs_value(1, 1, [[str]])[);}]])

b4_case(26, [b4_syncline(248, [["Tig.y"]])
[    { DeclDataMember(]b4_rhs_value(3, 3, [[str]])[); }]])

b4_case(27, [b4_syncline(249, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = ]b4_rhs_value(1, 1, [[nPtr]])[; }]])

b4_case(28, [b4_syncline(250, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[  = SyntaxObj.Operator(';', 2, ]b4_rhs_value(3, 1, [[nPtr]])[, ]b4_rhs_value(3, 3, [[nPtr]])[); }]])

b4_case(29, [b4_syncline(254, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(FUNC, 2, ]b4_rhs_value(4, 1, [[nPtr]])[, ]b4_rhs_value(4, 3, [[nPtr]])[); SymbTable.ClearCurrentFn();}]])

b4_case(30, [b4_syncline(255, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(FUNC, 2, ]b4_rhs_value(3, 1, [[nPtr]])[, NULL); SymbTable.ClearCurrentFn();}]])

b4_case(31, [b4_syncline(259, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = ]b4_rhs_value(4, 1, [[nPtr]])[;  }]])

b4_case(32, [b4_syncline(260, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = ]b4_rhs_value(3, 1, [[nPtr]])[;  }]])

b4_case(33, [b4_syncline(264, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.CreateMembFnNameNode(]b4_rhs_value(1, 1, [[str]])[); }]])

b4_case(34, [b4_syncline(271, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(';', 2, NULL, NULL); }]])

b4_case(35, [b4_syncline(272, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = ]b4_rhs_value(3, 2, [[nPtr]])[; }]])

b4_case(36, [b4_syncline(273, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = ]b4_rhs_value(2, 1, [[nPtr]])[; }]])

b4_case(37, [b4_syncline(274, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(PRINT, 1, ]b4_rhs_value(3, 2, [[nPtr]])[); }]])

b4_case(38, [b4_syncline(275, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = ]b4_rhs_value(3, 2, [[nPtr]])[; }]])

b4_case(39, [b4_syncline(276, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(WHILE, 2, ]b4_rhs_value(5, 3, [[nPtr]])[, ]b4_rhs_value(5, 5, [[nPtr]])[); }]])

b4_case(40, [b4_syncline(277, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(FOR, 2, ]b4_rhs_value(5, 3, [[nPtr]])[, ]b4_rhs_value(5, 5, [[nPtr]])[); }]])

b4_case(41, [b4_syncline(278, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(IF, 2, ]b4_rhs_value(5, 3, [[nPtr]])[, ]b4_rhs_value(5, 5, [[nPtr]])[); }]])

b4_case(42, [b4_syncline(279, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(IF, 3, ]b4_rhs_value(7, 3, [[nPtr]])[, ]b4_rhs_value(7, 5, [[nPtr]])[, ]b4_rhs_value(7, 7, [[nPtr]])[); }]])

b4_case(43, [b4_syncline(280, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = ]b4_rhs_value(2, 1, [[nPtr]])[; }]])

b4_case(44, [b4_syncline(281, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(FN_RETURN,1,NULL); }]])

b4_case(45, [b4_syncline(282, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(FN_RETURN,1,]b4_rhs_value(3, 2, [[nPtr]])[); }]])

b4_case(46, [b4_syncline(283, [["Tig.y"]])
[    { yyerrok;}]])

b4_case(47, [b4_syncline(287, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = ]b4_rhs_value(1, 1, [[nPtr]])[; }]])

b4_case(48, [b4_syncline(288, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(';', 2, ]b4_rhs_value(2, 1, [[nPtr]])[, ]b4_rhs_value(2, 2, [[nPtr]])[); }]])

b4_case(49, [b4_syncline(299, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator('=', 2, ]b4_rhs_value(3, 1, [[nPtr]])[, ]b4_rhs_value(3, 3, [[nPtr]])[); }]])

b4_case(50, [b4_syncline(303, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.IdentifierExpression(]b4_rhs_value(1, 1, [[str]])[); }]])

b4_case(51, [b4_syncline(304, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(ARROW, 2, SyntaxObj.IdentifierExpression(]b4_rhs_value(2, 1, [[str]])[), ]b4_rhs_value(2, 2, [[nPtr]])[); }]])

b4_case(52, [b4_syncline(309, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.varAssignmentIdentifierNode(]b4_rhs_value(1, 1, [[str]])[); }]])

b4_case(53, [b4_syncline(312, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(MEMB_ASSIGN, 2, ]b4_rhs_value(3, 1, [[nPtr]])[,  SyntaxObj.MemberNode(]b4_rhs_value(3, 3, [[str]])[)); }]])

b4_case(54, [b4_syncline(318, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(ARROW,1, SyntaxObj.MemberNode(]b4_rhs_value(2, 2, [[str]])[)); FinalMembNode = ]b4_lhs_value([[nPtr]])[; }]])

b4_case(55, [b4_syncline(319, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(';',2, ]b4_rhs_value(3, 1, [[nPtr]])[,SyntaxObj.Operator(ARROW,1, SyntaxObj.MemberNode(]b4_rhs_value(3, 3, [[str]])[))); FinalMembNode = ]b4_lhs_value([[nPtr]])[->op@{1@};}]])

b4_case(56, [b4_syncline(324, [["Tig.y"]])
[    {  ]b4_lhs_value([[nPtr]])[ = SyntaxObj.IdentifierExpression(]b4_rhs_value(1, 1, [[str]])[); }]])

b4_case(57, [b4_syncline(325, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(';',2, ]b4_rhs_value(3, 1, [[nPtr]])[,SyntaxObj.Operator(ARROW,1, SyntaxObj.MemberNode(]b4_rhs_value(3, 3, [[str]])[)));  }]])

b4_case(58, [b4_syncline(327, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(';',2,]b4_rhs_value(2, 1, [[nPtr]])[,  SyntaxObj.Operator(ARRAY_ELEMENT,1,]b4_rhs_value(2, 2, [[nPtr]])[));  }]])

b4_case(59, [b4_syncline(336, [["Tig.y"]])
[    {State.Push(); }]])

b4_case(60, [b4_syncline(337, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(FUNC_CALL,3,]b4_rhs_value(5, 1, [[nPtr]])[,]b4_rhs_value(5, 4, [[nPtr]])[,State.Seq_Count);State.Pop(); }]])

b4_case(61, [b4_syncline(342, [["Tig.y"]])
[    {State.Push(); }]])

b4_case(62, [b4_syncline(344, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(FUNC_CALL_RET,3,]b4_rhs_value(5, 1, [[nPtr]])[,]b4_rhs_value(5, 4, [[nPtr]])[,State.Seq_Count); State.Pop(); }]])

b4_case(63, [b4_syncline(349, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.CreateFnCallNode(]b4_rhs_value(1, 1, [[str]])[) ; }]])

b4_case(64, [b4_syncline(350, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SupMembFnCallNode(]b4_rhs_value(2, 2, [[str]])[) ; }]])

b4_case(65, [b4_syncline(353, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator('m', 2, ]b4_rhs_value(3, 1, [[nPtr]])[, SyntaxObj.MemberNode(]b4_rhs_value(3, 3, [[str]])[) ); }]])

b4_case(66, [b4_syncline(355, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.CreateSuperMembNode(SyntaxObj.IdentifierExpression(]b4_rhs_value(3, 1, [[str]])[),]b4_rhs_value(3, 3, [[str]])[); }]])

b4_case(67, [b4_syncline(361, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = ]b4_rhs_value(1, 1, [[nPtr]])[;}]])

b4_case(68, [b4_syncline(362, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = NULL; }]])

b4_case(69, [b4_syncline(370, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(';', 2,]b4_rhs_value(2, 1, [[nPtr]])[,  SyntaxObj.Operator(PRINT,1,SyntaxObj.CreateStrNode(]b4_rhs_value(2, 2, [[str]])[)) ); }]])

b4_case(70, [b4_syncline(374, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = ]b4_rhs_value(1, 1, [[nPtr]])[; }]])

b4_case(71, [b4_syncline(375, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(';',2, ]b4_rhs_value(2, 1, [[nPtr]])[, ]b4_rhs_value(2, 2, [[nPtr]])[); }]])

b4_case(72, [b4_syncline(379, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(PRINT, 2 ,  SyntaxObj.CreateStrNode(]b4_rhs_value(4, 1, [[str]])[), ]b4_rhs_value(4, 3, [[nPtr]])[); }]])

b4_case(73, [b4_syncline(384, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(';',3,]b4_rhs_value(5, 1, [[nPtr]])[,]b4_rhs_value(5, 3, [[nPtr]])[,]b4_rhs_value(5, 5, [[nPtr]])[); }]])

b4_case(74, [b4_syncline(388, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = ]b4_rhs_value(3, 2, [[nPtr]])[; }]])

b4_case(75, [b4_syncline(389, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(';',2, ]b4_rhs_value(5, 2, [[nPtr]])[, ]b4_rhs_value(5, 4, [[nPtr]])[); }]])

b4_case(76, [b4_syncline(393, [["Tig.y"]])
[    {State.Push(); }]])

b4_case(77, [b4_syncline(394, [["Tig.y"]])
[    {]b4_lhs_value([[nPtr]])[ = ]b4_rhs_value(4, 3, [[nPtr]])[; }]])

b4_case(78, [b4_syncline(398, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = ]b4_rhs_value(1, 1, [[nPtr]])[; TableRows++;}]])

b4_case(79, [b4_syncline(399, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(';',2, ]b4_rhs_value(3, 1, [[nPtr]])[, ]b4_rhs_value(3, 3, [[nPtr]])[); TableRows++;}]])

b4_case(80, [b4_syncline(406, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.IntegerConstant(]b4_rhs_value(1, 1, [[iValue]])[); }]])

b4_case(81, [b4_syncline(407, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.CreateStrNode(]b4_rhs_value(1, 1, [[str]])[);}]])

b4_case(82, [b4_syncline(408, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.FloatConstant(]b4_rhs_value(1, 1, [[fValue]])[); }]])

b4_case(83, [b4_syncline(409, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.IdentifierExpression(]b4_rhs_value(1, 1, [[str]])[); }]])

b4_case(84, [b4_syncline(410, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = ]b4_rhs_value(1, 1, [[nPtr]])[; }]])

b4_case(85, [b4_syncline(411, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(NEW,1,SyntaxObj.ClassIdNode(]b4_rhs_value(2, 2, [[str]])[));}]])

b4_case(86, [b4_syncline(412, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ =  SyntaxObj.Operator(NEW,2,]b4_rhs_value(5, 2, [[nPtr]])[,]b4_rhs_value(5, 4, [[nPtr]])[);}]])

b4_case(87, [b4_syncline(415, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(ARROW, 2, ]b4_rhs_value(3, 1, [[nPtr]])[,  SyntaxObj.MemberNode(]b4_rhs_value(3, 3, [[str]])[)); }]])

b4_case(88, [b4_syncline(416, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(UMINUS, 1, ]b4_rhs_value(2, 2, [[nPtr]])[); }]])

b4_case(89, [b4_syncline(417, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator('+', 2, ]b4_rhs_value(3, 1, [[nPtr]])[, ]b4_rhs_value(3, 3, [[nPtr]])[); }]])

b4_case(90, [b4_syncline(418, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator('-', 2, ]b4_rhs_value(3, 1, [[nPtr]])[, ]b4_rhs_value(3, 3, [[nPtr]])[); }]])

b4_case(91, [b4_syncline(419, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator('*', 2, ]b4_rhs_value(3, 1, [[nPtr]])[, ]b4_rhs_value(3, 3, [[nPtr]])[); }]])

b4_case(92, [b4_syncline(420, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator('/', 2, ]b4_rhs_value(3, 1, [[nPtr]])[, ]b4_rhs_value(3, 3, [[nPtr]])[); }]])

b4_case(93, [b4_syncline(421, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator('%', 2, ]b4_rhs_value(3, 1, [[nPtr]])[, ]b4_rhs_value(3, 3, [[nPtr]])[); }]])

b4_case(94, [b4_syncline(422, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator('<', 2, ]b4_rhs_value(3, 1, [[nPtr]])[, ]b4_rhs_value(3, 3, [[nPtr]])[); }]])

b4_case(95, [b4_syncline(423, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator('>', 2, ]b4_rhs_value(3, 1, [[nPtr]])[, ]b4_rhs_value(3, 3, [[nPtr]])[); }]])

b4_case(96, [b4_syncline(424, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(AND, 2, ]b4_rhs_value(3, 1, [[nPtr]])[, ]b4_rhs_value(3, 3, [[nPtr]])[); }]])

b4_case(97, [b4_syncline(425, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(OR, 2, ]b4_rhs_value(3, 1, [[nPtr]])[, ]b4_rhs_value(3, 3, [[nPtr]])[); }]])

b4_case(98, [b4_syncline(426, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(GE, 2, ]b4_rhs_value(3, 1, [[nPtr]])[, ]b4_rhs_value(3, 3, [[nPtr]])[); }]])

b4_case(99, [b4_syncline(427, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(LE, 2, ]b4_rhs_value(3, 1, [[nPtr]])[, ]b4_rhs_value(3, 3, [[nPtr]])[); }]])

b4_case(100, [b4_syncline(428, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(NE, 2, ]b4_rhs_value(3, 1, [[nPtr]])[, ]b4_rhs_value(3, 3, [[nPtr]])[); }]])

b4_case(101, [b4_syncline(429, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(EQ, 2, ]b4_rhs_value(3, 1, [[nPtr]])[, ]b4_rhs_value(3, 3, [[nPtr]])[); }]])

b4_case(102, [b4_syncline(431, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = ]b4_rhs_value(3, 2, [[nPtr]])[; }]])

b4_case(103, [b4_syncline(432, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(DATA_TYPE,1,]b4_rhs_value(2, 2, [[nPtr]])[); }]])

b4_case(104, [b4_syncline(433, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(STR_INPUT,0); }]])

b4_case(105, [b4_syncline(437, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = NewListArrayNode(]b4_rhs_value(1, 1, [[nPtr]])[,State.Seq_Count);State.Pop(); }]])

b4_case(106, [b4_syncline(438, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = NewListTableNode(]b4_rhs_value(3, 2, [[nPtr]])[,State.Seq_Count,TableRows);  TableRows=0;}]])

b4_case(107, [b4_syncline(440, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(ARRAY_ELEMENT,2,]b4_rhs_value(2, 1, [[nPtr]])[,]b4_rhs_value(2, 2, [[nPtr]])[); }]])

b4_case(108, [b4_syncline(441, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = RandNode(]b4_rhs_value(1, 1, [[str]])[, NULL,NULL); }]])

b4_case(109, [b4_syncline(442, [["Tig.y"]])
[    { ]b4_lhs_value([[nPtr]])[ = RandNode(NULL,]b4_rhs_value(3, 1, [[nPtr]])[,]b4_rhs_value(3, 3, [[nPtr]])[); }]])

b4_case(110, [b4_syncline(447, [["Tig.y"]])
[    {]b4_lhs_value([[nPtr]])[ = ]b4_rhs_value(1, 1, [[nPtr]])[; State.Seq_Count++; }]])

b4_case(111, [b4_syncline(448, [["Tig.y"]])
[    {]b4_lhs_value([[nPtr]])[ = SyntaxObj.Operator(';',2, ]b4_rhs_value(3, 1, [[nPtr]])[, ]b4_rhs_value(3, 3, [[nPtr]])[); State.Seq_Count++; }]])

])

m4_define([b4_r2_min],
[[0]])


m4_define([b4_symbol(30, is_token)],
[[1]])


m4_define([b4_symbol(79, tag)],
[[class_parents]])


m4_define([b4_percent_define_syncline(lr.type)],
[[]])


m4_define([b4_symbol(75, has_type)],
[[1]])


m4_define([b4_symbol(53, type)],
[[]])


m4_define([b4_symbol(29, has_destructor)],
[[0]])


m4_define([b4_symbol(102, has_type)],
[[1]])


m4_define([b4_symbol(4, has_type)],
[[1]])


m4_define([b4_symbol(10, has_printer)],
[[0]])


m4_define([b4_symbol(89, has_destructor)],
[[0]])


m4_define([b4_symbol(38, has_type)],
[[0]])


m4_define([b4_symbol(22, has_destructor)],
[[0]])


m4_define([b4_symbol(82, id)],
[[member_func]])


m4_define([b4_symbol(52, tag)],
[['*']])


m4_define([b4_symbol(11, user_number)],
[[266]])


m4_define([b4_symbol(82, has_destructor)],
[[0]])


m4_define([b4_symbol(30, user_number)],
[[285]])


m4_define([b4_symbol(60, type)],
[[]])


m4_define([b4_symbol(84, has_type)],
[[1]])


m4_define([b4_symbol(17, id)],
[[CLASS]])


m4_define([b4_symbol(3, type)],
[[iValue]])


m4_define([b4_symbol(101, type)],
[[nPtr]])


m4_define([b4_symbol(47, has_type)],
[[0]])


m4_define([b4_symbol(1, has_id)],
[[1]])


m4_define([b4_symbol(56, tag)],
[[UMINUS]])


m4_define([b4_symbol(90, has_id)],
[[1]])


m4_define([b4_symbol(80, has_id)],
[[1]])


m4_define([b4_symbol(1, id)],
[[error]])


m4_define([b4_symbol(14, type)],
[[]])


m4_define([b4_symbol(70, has_id)],
[[1]])


m4_define([b4_symbol(60, has_id)],
[[0]])


m4_define([b4_symbol(93, has_type)],
[[0]])


m4_define([b4_symbol(15, has_destructor)],
[[0]])


m4_define([b4_symbol(75, has_destructor)],
[[0]])


m4_define([b4_symbol(57, id)],
[[NON_SEQ]])


m4_define([b4_symbol(50, has_id)],
[[0]])


m4_define([b4_symbol(40, has_id)],
[[1]])


m4_define([b4_symbol(11, is_token)],
[[1]])


m4_define([b4_symbol(99, has_printer)],
[[0]])


m4_define([b4_symbol(30, has_id)],
[[1]])


m4_define([b4_symbol(56, has_type)],
[[0]])


m4_define([b4_symbol(20, has_id)],
[[1]])


m4_define([b4_symbol(21, type)],
[[]])


m4_define([b4_symbol(10, has_id)],
[[1]])


m4_define([b4_symbol(88, type)],
[[nPtr]])


m4_define([b4_symbol(19, has_type)],
[[0]])


m4_define([b4_symbol(1, has_printer)],
[[0]])


m4_define([b4_symbol(4, has_destructor)],
[[0]])


m4_define([b4_symbol(102, has_destructor)],
[[0]])


m4_define([b4_symbol(97, id)],
[[call_param_list]])


m4_define([b4_symbol(33, tag)],
[[ARRAY_ELEMENT]])


m4_define([b4_symbol(2, user_number)],
[[257]])


m4_define([b4_symbol(100, user_number)],
[[-1]])


m4_define([b4_symbol(20, is_token)],
[[1]])


m4_define([b4_stos_max],
[[107]])


m4_define([b4_symbol(65, has_type)],
[[0]])


m4_define([b4_symbol(103, number)],
[[103]])


m4_define([b4_symbol(95, type)],
[[]])


m4_define([b4_symbol(5, number)],
[[5]])


m4_define([b4_symbol(43, id)],
[[EQ]])


m4_define([b4_symbol(94, number)],
[[94]])


m4_define([b4_symbol(68, has_destructor)],
[[0]])


m4_define([b4_tag_seen_flag],
[[1]])


m4_define([b4_symbol(84, number)],
[[84]])


m4_define([b4_symbol(74, number)],
[[74]])


m4_define([b4_symbol(28, has_printer)],
[[0]])


m4_define([b4_symbol(28, has_type)],
[[0]])


m4_define([b4_file_name],
[["Tig.y"]])


m4_define([b4_symbol(64, number)],
[[64]])


m4_define([b4_symbol(61, has_destructor)],
[[0]])


m4_define([b4_symbol(47, has_printer)],
[[0]])


m4_define([b4_symbol(54, number)],
[[54]])


m4_define([b4_percent_define(lr.keep-unreachable-state)],
[[false]])


m4_define([b4_symbol(29, user_number)],
[[284]])


m4_define([b4_symbol(37, tag)],
[[ELSE]])


m4_define([b4_percent_define_bison_variables(lr.type)],
[[]])


m4_define([b4_symbol(44, number)],
[[44]])


m4_define([b4_symbol(66, has_printer)],
[[0]])


m4_define([b4_symbol(48, user_number)],
[[301]])


m4_define([b4_symbol(34, number)],
[[34]])


m4_define([b4_symbol(49, type)],
[[]])


m4_define([b4_symbol(74, has_type)],
[[1]])


m4_define([b4_symbol(85, has_printer)],
[[0]])


m4_define([b4_symbol(83, id)],
[[member_func_decl]])


m4_define([b4_symbol(24, number)],
[[24]])


m4_define([b4_symbol(67, user_number)],
[[-1]])


m4_define([b4_symbol(14, number)],
[[14]])


m4_define([b4_symbol(3, has_type)],
[[1]])


m4_define([b4_symbol(101, has_type)],
[[1]])


m4_define([b4_symbol(86, user_number)],
[[-1]])


m4_define([b4_symbol(37, has_type)],
[[0]])


m4_define([b4_symbol(10, tag)],
[[IF]])


m4_define([b4_user_token_number_max],
[[304]])


m4_define([b4_symbol(18, id)],
[[HAS]])


m4_define([b4_pkgdatadir],
[[d:\projects\Tig\data]])


m4_define([b4_symbol(56, type)],
[[]])


m4_define([b4_stos],
[[     0,    67,     0,     1,     4,     8,     9,    10,    11,    15,
      17,    24,    58,    60,    68,    73,    74,    75,    85,    87,
      89,    91,    92,    96,    60,    24,    61,    61,    61,     3,
       4,     5,     6,     7,    25,    26,    40,    51,    58,    61,
      64,    91,    94,    96,    98,    99,   100,   103,   106,     5,
      60,   106,     4,    78,     4,     4,    85,    86,    58,    61,
      60,    63,    20,    64,   102,    60,    61,     4,   106,     4,
      87,    91,   101,   106,    64,     4,    88,     4,    69,   106,
     104,   106,   103,   105,    20,   102,    61,    60,     5,   100,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    53,    54,    60,    60,    18,    21,    79,    59,
      85,    59,    86,     4,    62,    76,    77,   106,     4,   106,
      93,    62,    60,    20,    62,    62,   106,    20,    90,    61,
     106,   107,    62,    55,    65,     4,    95,   106,   106,   106,
     106,   106,   106,   106,   106,   106,   106,   106,   106,   106,
     106,     4,    81,    82,    83,    84,     4,    80,    18,    59,
      55,    62,    55,    65,    97,   107,    85,   106,     4,    85,
      85,    65,     4,    20,     4,    70,    71,    72,    55,    59,
     103,    97,    55,    60,    58,    61,    55,    81,    77,   106,
      62,    60,    37,     4,    55,    62,   106,   106,    62,     4,
      82,    59,    86,    62,    76,     4,    60,    65,    87,    85,
      71,    59,    62]])


m4_define([b4_symbol(54, has_destructor)],
[[0]])


m4_define([b4_symbol(83, has_type)],
[[1]])


m4_define([b4_symbol(82, tag)],
[[member_func]])


m4_define([b4_symbol(2, id)],
[[]])


m4_define([b4_symbol(100, id)],
[[ui]])


m4_define([b4_symbol(14, tag)],
[[FUNC_CALL_RET]])


m4_define([b4_symbol(106, has_id)],
[[1]])


m4_define([b4_symbol(63, type)],
[[]])


m4_define([b4_symbol(8, has_id)],
[[1]])


m4_define([b4_rline_max],
[[448]])


m4_define([b4_symbol(46, has_type)],
[[0]])


m4_define([b4_symbol(97, has_id)],
[[1]])


m4_define([b4_symbol(14, has_printer)],
[[0]])


m4_define([b4_symbol(58, id)],
[[]])


m4_define([b4_symbol(87, has_id)],
[[1]])


m4_define([b4_symbol(33, has_printer)],
[[0]])


m4_define([b4_symbol(77, has_id)],
[[1]])


m4_define([b4_symbol(15, user_number)],
[[270]])


m4_define([b4_symbol(104, type)],
[[]])


m4_define([b4_symbol(6, type)],
[[fValue]])


m4_define([b4_symbol(67, has_id)],
[[1]])


m4_define([b4_nterms_number],
[[42]])


m4_define([b4_symbol(52, has_printer)],
[[0]])


m4_define([b4_symbol(34, user_number)],
[[289]])


m4_define([b4_symbol(99, is_token)],
[[0]])


m4_define([b4_symbol(92, has_type)],
[[1]])


m4_define([b4_symbol(86, tag)],
[[stmt_list]])


m4_define([b4_symbol(57, has_id)],
[[1]])


m4_define([b4_symbol(70, type)],
[[nPtr]])


m4_define([b4_symbol(71, has_printer)],
[[0]])


m4_define([b4_symbol(47, has_id)],
[[1]])


m4_define([b4_symbol(53, user_number)],
[[47]])


m4_define([b4_symbol(37, has_id)],
[[1]])


m4_define([b4_symbol(90, has_printer)],
[[0]])


m4_define([b4_symbol(18, tag)],
[[HAS]])


m4_define([b4_symbol(17, type)],
[[]])


m4_define([b4_symbol(10, is_token)],
[[1]])


m4_define([b4_symbol(47, has_destructor)],
[[0]])


m4_define([b4_symbol(55, has_type)],
[[0]])


m4_define([b4_symbol(98, id)],
[[complex_str]])


m4_define([b4_symbol(72, user_number)],
[[-1]])


m4_define([b4_symbol(27, has_id)],
[[1]])


m4_define([b4_symbol(17, has_id)],
[[1]])


m4_define([b4_percent_define_kind(parse.error)],
[[keyword]])


m4_define([b4_symbol(91, user_number)],
[[-1]])


m4_define([b4_symbol(40, has_destructor)],
[[0]])


m4_define([b4_symbol(18, has_type)],
[[0]])


m4_define([b4_symbol(44, id)],
[[NE]])


m4_define([b4_symbol(24, type)],
[[]])


m4_define([b4_symbol(64, has_type)],
[[0]])


m4_define([b4_symbol(3, tag)],
[[INTEGER]])


m4_define([b4_symbol(101, tag)],
[[for_rules]])


m4_define([b4_symbol(63, tag)],
[['=']])


m4_define([b4_symbol(31, type)],
[[]])


m4_define([b4_glr_flag],
[[1]])


m4_define([b4_symbol(84, id)],
[[member_func_name]])


m4_define([b4_conflict_list_heads_min],
[[0]])


m4_define([b4_symbol(98, type)],
[[nPtr]])


m4_define([b4_symbol(27, has_type)],
[[0]])


m4_define([b4_symbol(5, has_printer)],
[[0]])


m4_define([b4_symbol(103, has_printer)],
[[0]])


m4_define([b4_symbol(20, user_number)],
[[275]])


m4_define([b4_symbol(33, has_destructor)],
[[0]])


m4_define([b4_symbol(30, id)],
[[PLIB]])


m4_define([b4_symbol(93, has_destructor)],
[[0]])


m4_define([b4_r1_max],
[[107]])


m4_define([b4_symbol(19, id)],
[[WITH]])


m4_define([b4_symbol(104, user_number)],
[[-1]])


m4_define([b4_symbol(6, user_number)],
[[261]])


m4_define([b4_symbol(73, has_type)],
[[1]])


m4_define([b4_symbol(105, tag)],
[[table_list]])


m4_define([b4_symbol(7, tag)],
[[RAND]])


m4_define([b4_symbol(67, tag)],
[[code]])


m4_define([b4_symbol(9, is_token)],
[[1]])


m4_define([b4_symbol(107, is_token)],
[[0]])


m4_define([b4_symbol(100, has_type)],
[[1]])


m4_define([b4_symbol(2, has_type)],
[[0]])


m4_define([b4_symbol(36, has_type)],
[[0]])


m4_define([b4_percent_define_loc(lr.default-reduction)],
[[[[<default value>:-1.-1]], [[<default value>:-1.-1]]]])


m4_define([b4_symbol(101, id)],
[[for_rules]])


m4_define([b4_symbol(3, id)],
[[INTEGER]])


m4_define([b4_pgoto_max],
[[161]])


m4_define([b4_symbol(70, id)],
[[init_list]])


m4_define([b4_symbol(40, tag)],
[[NEW]])


m4_define([b4_symbol(59, id)],
[[]])


m4_define([b4_symbol(82, has_type)],
[[1]])


m4_define([b4_symbol(89, is_token)],
[[0]])


m4_define([b4_symbol(0, number)],
[[0]])


m4_define([b4_symbol(89, has_printer)],
[[0]])


m4_define([b4_symbol(59, type)],
[[]])


m4_define([b4_symbol(26, has_destructor)],
[[0]])


m4_define([b4_symbol(86, has_destructor)],
[[0]])


m4_define([b4_symbol(45, has_type)],
[[0]])


m4_define([b4_symbol(66, type)],
[[]])


m4_define([b4_symbol(99, id)],
[[ui_list]])


m4_define([b4_symbol(44, tag)],
[[NE]])


m4_define([b4_toknum_min],
[[0]])


m4_define([b4_symbol(91, has_type)],
[[1]])


m4_define([b4_symbol(98, is_token)],
[[0]])


m4_define([b4_symbol(9, type)],
[[]])


m4_define([b4_symbol(107, type)],
[[nPtr]])


m4_define([b4_symbol(45, id)],
[[]])


m4_define([b4_last],
[[570]])


m4_define([b4_symbol(54, has_type)],
[[0]])


m4_define([b4_symbol(73, type)],
[[nPtr]])


m4_define([b4_symbol(18, has_printer)],
[[0]])


m4_define([b4_symbol(19, has_destructor)],
[[0]])


m4_define([b4_symbol(79, has_destructor)],
[[0]])


m4_define([b4_symbol(37, has_printer)],
[[0]])


m4_define([b4_symbol(48, tag)],
[[AND]])


m4_define([b4_percent_define_syncline(lr.keep-unreachable-state)],
[[]])


m4_define([b4_symbol(17, has_type)],
[[0]])


m4_define([b4_symbol(19, user_number)],
[[274]])


m4_define([b4_symbol(12, has_destructor)],
[[0]])


m4_define([b4_symbol(56, has_printer)],
[[0]])


m4_define([b4_symbol(72, has_destructor)],
[[0]])


m4_define([b4_symbol(38, user_number)],
[[293]])


m4_define([b4_symbol(85, id)],
[[stmt]])


m4_define([b4_symbol(75, has_printer)],
[[0]])


m4_define([b4_symbol(80, type)],
[[nPtr]])


m4_define([b4_symbol(57, user_number)],
[[304]])


m4_define([b4_symbol(94, has_printer)],
[[0]])


m4_define([b4_symbol(27, type)],
[[]])


m4_define([b4_symbol(101, has_id)],
[[1]])


m4_define([b4_symbol(21, tag)],
[[BASED_ON]])


m4_define([b4_symbol(63, has_type)],
[[0]])


m4_define([b4_symbol(3, has_id)],
[[1]])


m4_define([b4_symbol(76, user_number)],
[[-1]])


m4_define([b4_symbol(92, has_id)],
[[1]])


m4_define([b4_symbol(31, id)],
[[DEREF_ASSIGN]])


m4_define([b4_symbol(106, has_destructor)],
[[0]])


m4_define([b4_symbol(8, has_destructor)],
[[0]])


m4_define([b4_symbol(82, has_id)],
[[1]])


m4_define([b4_table_min],
[[-65]])


m4_define([b4_symbol(95, user_number)],
[[-1]])


m4_define([b4_symbol(72, has_id)],
[[1]])


m4_define([b4_symbol(26, has_type)],
[[0]])


m4_define([b4_symbol(1, has_destructor)],
[[0]])


m4_define([b4_symbol(62, has_id)],
[[0]])


m4_define([b4_symbol(52, has_id)],
[[0]])


m4_define([b4_symbol(93, tag)],
[[$][@@1]])


m4_define([b4_symbol(34, type)],
[[]])


m4_define([b4_symbol(42, has_id)],
[[1]])


m4_define([b4_symbol(4, id)],
[[IDENTIFIER]])


m4_define([b4_symbol(102, id)],
[[dimension_list]])


m4_define([b4_symbol(32, has_id)],
[[1]])


m4_define([b4_symbol(25, tag)],
[[DATA_TYPE]])


m4_define([b4_symbol(65, has_destructor)],
[[0]])


m4_define([b4_symbol(72, has_type)],
[[1]])


m4_define([b4_symbol(79, is_token)],
[[0]])


m4_define([b4_symbol(22, has_id)],
[[1]])


m4_define([b4_use_push_for_pull_flag],
[[0]])


m4_define([b4_symbol(71, id)],
[[init_pair]])


m4_define([b4_symbol(12, has_id)],
[[1]])


m4_define([b4_symbol(8, is_token)],
[[1]])


m4_define([b4_symbol(106, is_token)],
[[0]])


m4_define([b4_symbol(1, has_type)],
[[0]])


m4_define([b4_symbol(23, has_printer)],
[[0]])


m4_define([b4_symbol(41, type)],
[[]])


m4_define([b4_symbol(35, has_type)],
[[0]])


m4_define([b4_symbol(42, has_printer)],
[[0]])


m4_define([b4_symbol(97, tag)],
[[call_param_list]])


m4_define([b4_symbol(9, has_printer)],
[[0]])


m4_define([b4_symbol(107, has_printer)],
[[0]])


m4_define([b4_symbol(24, user_number)],
[[279]])


m4_define([b4_spec_name_prefix],
[[]])


m4_define([b4_union_members],
[[]b4_syncline(89, [["Tig.y"]])[
				 						
    int iValue;                 // integer value - for numeric constants etc 
	float fValue;				//float value - for floating-point constants
    CSyntaxNode *nPtr;          // node pointer - enables symbols to point to syntax nodes
	char    *str;				// a character string
	int iValue2;				//dual integer value, needed for second digit in the random number generator, eg, 1d20
]])


m4_define([b4_symbol(61, has_printer)],
[[0]])


m4_define([b4_symbol(29, tag)],
[[MEMB_ASSIGN]])


m4_define([b4_symbol(7, number)],
[[7]])


m4_define([b4_symbol(105, number)],
[[105]])


m4_define([b4_symbol(43, user_number)],
[[298]])


m4_define([b4_symbol(80, has_printer)],
[[0]])


m4_define([b4_symbol(96, number)],
[[96]])


m4_define([b4_symbol(88, is_token)],
[[0]])


m4_define([b4_symbol(81, has_type)],
[[1]])


m4_define([b4_symbol(62, user_number)],
[[41]])


m4_define([b4_symbol(86, number)],
[[86]])


m4_define([b4_symbol(76, number)],
[[76]])


m4_define([b4_symbol(70, tag)],
[[init_list]])


m4_define([b4_symbol(81, user_number)],
[[-1]])


m4_define([b4_symbol(58, has_destructor)],
[[0]])


m4_define([b4_symbol(44, has_type)],
[[0]])


m4_define([b4_symbol(66, number)],
[[66]])


m4_define([b4_symbol(46, id)],
[[]])


m4_define([b4_symbol(56, number)],
[[56]])


m4_define([b4_symbol(46, number)],
[[46]])


m4_define([b4_symbol(51, has_destructor)],
[[0]])


m4_define([b4_file_name_all_but_ext],
[[Tig]])


m4_define([b4_symbol(36, number)],
[[36]])


m4_define([b4_symbol(26, number)],
[[26]])


m4_define([b4_symbol(97, is_token)],
[[0]])


m4_define([b4_symbol(90, has_type)],
[[1]])


m4_define([b4_immediate_min],
[[0]])


m4_define([b4_symbol(16, number)],
[[16]])


m4_define([b4_final_state_number],
[[2]])


m4_define([b4_symbol(69, type)],
[[nPtr]])


m4_define([b4_symbol(74, tag)],
[[function_def]])


m4_define([b4_symbol(53, has_type)],
[[0]])


m4_define([b4_symbol(86, id)],
[[stmt_list]])


m4_define([b4_symbol(10, user_number)],
[[265]])


m4_define([b4_symbol(16, has_type)],
[[0]])


m4_define([b4_symbol(76, type)],
[[nPtr]])


m4_define([b4_symbol(32, id)],
[[ARRAY_ASSIGN]])


m4_define([b4_symbol(78, tag)],
[[class_name_dec]])


m4_define([b4_symbol(44, has_destructor)],
[[0]])


m4_define([b4_symbol(99, has_id)],
[[1]])


m4_define([b4_symbol(69, is_token)],
[[0]])


m4_define([b4_symbol(62, has_type)],
[[0]])


m4_define([b4_symbol(89, has_id)],
[[1]])


m4_define([b4_pre_prologue],
[[]b4_syncline(1, [["Tig.y"]])[
			// Definitions Section: -  token declarations and C code 
			// C code goes inside these curly brackets 
#include <stdio.h>
#include <stdlib.h>
#include <stdarg.h>
#include <malloc.h> //  parser uses alloc 
#include "SyntaxNode.h"
#include "symtab.h"
#include "StringTable.h"
#include "Coder.h"
#include "main.h"
#include "Tig.h"
#include "Stack.h"
#include "Nodes.h"

CStateStack State;

CSymbolTable SymbTable;	//Symbol table - keeps track of global variables, function names etc

CStringTable StrTable;  //Where we store any strings that are parsed

CCoder CodeObj;		//CodeObj will write the final bytecode to a file

CNodes SyntaxObj;		//SyntaxObj creates the various syntax nodes we need.

//Symbol-handling routines that create a syntax tree:
//CSyntaxNode* SyntaxObj.Operator(int oper, int nops, ...); 	//Create an IF, WHILE etc node
//CSyntaxNode* SyntaxObj.IdentifierExpression(char* Name);	// Create a node for a variable or parameter symbol
//CSyntaxNode* SyntaxObj.IdentifierAssignment(char* Name); //Create a syntax node for a variable which is being assigned a value.
//CSyntaxNode* SyntaxObj.IdentifyVarName(char* Name); //Check if the named variable has already been declared.
//CSyntaxNode* SyntaxObj.IntegerConstant(int Value);	// Create a node for a numeric constant 
//CSyntaxNode* FloatNode(float Value); //Create a node for a float constant
//CSyntaxNode* StrNode(char* Str); //Create a node for a string constant 
//CSyntaxNode* SyntaxObj.CreateGlobalFnNameNode(char* Name); //Create a node for a function declaration
//CSyntaxNode *SyntaxObj.CreateMembFnNameNode(char* Name); //Create a node for a member function declaration
//CSyntaxNode* FnCallNode(char* Name);  //Createa a node for a function call
CSyntaxNode* DeclClassNode(char* Name); //Declare a class name
//CSyntaxNode* SyntaxObj.ClassIdNode(char* Name);	//Create a node for class symbol
CSyntaxNode* MemberNode(CSyntaxNode* Obj, char* MemberName); //Create a node for a data member symbol
CSyntaxNode* DeclArrayNode(CSyntaxNode* Dimension); //create a node for an array declaration
//CSyntaxNode* ArrayElementNode(CSyntaxNode* Array, CSyntaxNode*  Element, int DimensionCount); //Create a node for an array element
//CSyntaxNode *SyntaxObj.CreateSuperMembNode(CSyntaxNode* Obj, char* MemberName); //Create a node for a superclassed member  function.
CSyntaxNode* ClassOpNode(CSyntaxNode* Name, CSyntaxNode* Parents, CSyntaxNode* Members, int ParentCount); //Create class declaration operator node
CSyntaxNode *SupMembFnCallNode(char* Name); //Create a node for a call to a parent function.
CSyntaxNode* DeclTableNode(CSyntaxNode* Rows, CSyntaxNode* Columns); //create a node for a table declaration
CSyntaxNode* RandNode(char* Str,CSyntaxNode* Throws, CSyntaxNode* Dice); //create a node for a random number declaration
//CSyntaxNode* DeclFnNode(CSyntaxNode* Name, CSyntaxNode* Code); 
CSyntaxNode* InitMemberNode(char* MemberName);
//CSyntaxNode* SyntaxObj.MemberNode (char* MemberName); //Create a node for a data member symbol
//CSyntaxNode* MemberOfNode(CSyntaxNode* Memb);
CSyntaxNode* NewListArrayNode(CSyntaxNode* Initialisation, int Dimension);
CSyntaxNode* NewListTableNode(CSyntaxNode* Initialisation, int Cols, int Rows);
 
//Symbol-handling routines that don't result in a syntax node: 
//void DeclGlobalVar(char* Name,int val);  //Handle the declaration of a global variable. just record name etc
void DeclParam(char* Name, char* Ptr);  //Handle a function parameter declaration
void DeclDataMember(char* Name);  //Handle a class data-member declaration
void FreeNode(CSyntaxNode *p); //Delete nodes when they're no longer required
void RemoveFinalGetproperty(); //Simple kludge that removes the final ARROW operation where a value is being assigned to a obj->member.


void AddParentToCurrentClass(char* ParentName);

//Forward declarations for Bison
int yylex(void); //Called by Bison to parse input
void yyerror(const char *s); //Called by Bison when there's an error


int NoParents = 0;
//int SyntaxObj.TotalMembs = 0;
int ArrayFunc = 0;
int TableRows = 0;

CSyntaxNode* FinalMembNode = NULL;

void Error (const char *format, ...); //Our own error function - this is what yerror calls

//This symbol table entry represents the default int type. Symbols that aren't of a user-defined type can now be set to this. 
SymDesc *DefaultIntType = SymbTable.Find(GLOBAL_SCOPE,"Int"); 



]])


m4_define([b4_symbol(83, type)],
[[nPtr]])


m4_define([b4_symbol(103, id)],
[[array_list]])


m4_define([b4_symbol(79, has_id)],
[[1]])


m4_define([b4_symbol(5, id)],
[[STRING]])


m4_define([b4_symbol(69, has_id)],
[[1]])


m4_define([b4_symbol(51, tag)],
[['-']])


m4_define([b4_symbol(25, has_type)],
[[0]])


m4_define([b4_symbol(72, id)],
[[data_member]])


m4_define([b4_symbol(59, has_id)],
[[0]])


m4_define([b4_symbol(49, has_id)],
[[1]])


m4_define([b4_symbol(79, has_printer)],
[[0]])


m4_define([b4_symbol(39, has_id)],
[[1]])


m4_define([b4_symbol(29, has_id)],
[[1]])


m4_define([b4_symbol(90, type)],
[[nPtr]])


m4_define([b4_symbol(78, is_token)],
[[0]])


m4_define([b4_symbol(98, has_printer)],
[[0]])


m4_define([b4_symbol(71, has_type)],
[[1]])


m4_define([b4_symbol(19, has_id)],
[[1]])


m4_define([b4_symbol(37, type)],
[[]])


m4_define([b4_symbol(37, has_destructor)],
[[0]])


m4_define([b4_symbol(0, has_type)],
[[0]])


m4_define([b4_symbol(105, is_token)],
[[0]])


m4_define([b4_symbol(97, has_destructor)],
[[0]])


m4_define([b4_symbol(7, is_token)],
[[1]])


m4_define([b4_rline],
[[     0,   168,   168,   169,   171,   179,   183,   187,   188,   192,
     196,   200,   201,   202,   203,   212,   213,   217,   221,   222,
     226,   232,   236,   240,   241,   247,   248,   249,   250,   254,
     255,   259,   260,   264,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   287,   288,   299,
     303,   304,   309,   312,   318,   319,   324,   325,   327,   336,
     336,   342,   342,   349,   350,   353,   355,   361,   362,   370,
     374,   375,   379,   384,   388,   389,   393,   393,   398,   399,
     406,   407,   408,   409,   410,   411,   412,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   431,   432,   433,   437,   438,   440,   441,   442,
     447,   448]])


m4_define([b4_symbol(55, tag)],
[[',']])


m4_define([b4_symbol(99, user_number)],
[[-1]])


m4_define([b4_symbol(34, has_type)],
[[0]])


m4_define([b4_symbol(0, has_printer)],
[[0]])


m4_define([b4_symbol(30, has_destructor)],
[[0]])


m4_define([b4_symbol(90, has_destructor)],
[[0]])


m4_define([b4_symbol(44, type)],
[[]])


m4_define([b4_symbol(1, user_number)],
[[256]])


m4_define([b4_symbol(47, id)],
[[OR]])


m4_define([b4_symbol(80, has_type)],
[[1]])


m4_define([b4_symbol(87, is_token)],
[[0]])


m4_define([b4_symbol(59, tag)],
[['}']])


m4_define([b4_symbol(43, has_type)],
[[0]])


m4_define([b4_symbol(27, has_printer)],
[[0]])


m4_define([b4_symbol(51, type)],
[[]])


m4_define([b4_symbol(46, has_printer)],
[[0]])


m4_define([b4_symbol(28, user_number)],
[[283]])


m4_define([b4_symbol(87, id)],
[[assignment]])


m4_define([b4_symbol(65, has_printer)],
[[0]])


m4_define([b4_symbol(32, tag)],
[[ARRAY_ASSIGN]])


m4_define([b4_symbol(96, is_token)],
[[0]])


m4_define([b4_symbol(47, user_number)],
[[300]])


m4_define([b4_symbol(23, has_destructor)],
[[0]])


m4_define([b4_symbol(84, has_printer)],
[[0]])


m4_define([b4_symbol(83, has_destructor)],
[[0]])


m4_define([b4_symbol(66, user_number)],
[[-1]])


m4_define([b4_symbol(33, id)],
[[ARRAY_ELEMENT]])


m4_define([b4_symbol(52, has_type)],
[[0]])


m4_define([b4_symbol(59, is_token)],
[[1]])


m4_define([b4_symbol(85, user_number)],
[[-1]])


m4_define([b4_stos_min],
[[0]])


m4_define([b4_symbol(1, type)],
[[]])


m4_define([b4_symbol(15, has_type)],
[[0]])


m4_define([b4_symbol(36, tag)],
[[IFX]])


m4_define([b4_symbol(6, id)],
[[FLOAT]])


m4_define([b4_symbol(104, id)],
[[]])


m4_define([b4_symbol(100, number)],
[[100]])


m4_define([b4_symbol(2, number)],
[[2]])


m4_define([b4_symbol(91, number)],
[[91]])


m4_define([b4_symbol(81, number)],
[[81]])


m4_define([b4_symbol(73, id)],
[[definition]])


m4_define([b4_symbol(12, type)],
[[]])


m4_define([b4_symbol(71, number)],
[[71]])


m4_define([b4_symbol(79, type)],
[[nPtr]])


m4_define([b4_symbol(61, has_type)],
[[0]])


m4_define([b4_symbol(68, is_token)],
[[0]])


m4_define([b4_symbol(16, has_destructor)],
[[0]])


m4_define([b4_symbol(13, has_printer)],
[[0]])


m4_define([b4_symbol(76, has_destructor)],
[[0]])


m4_define([b4_symbol(61, number)],
[[61]])


m4_define([b4_symbol(51, number)],
[[51]])


m4_define([b4_symbol(32, has_printer)],
[[0]])


m4_define([b4_symbol(41, number)],
[[41]])


m4_define([b4_percent_define(lr.type)],
[[lalr]])


m4_define([b4_symbol(14, user_number)],
[[269]])


m4_define([b4_symbol(24, has_type)],
[[0]])


m4_define([b4_symbol(31, number)],
[[31]])


m4_define([b4_symbol(51, has_printer)],
[[0]])


m4_define([b4_symbol(86, type)],
[[nPtr]])


m4_define([b4_symbol(33, user_number)],
[[288]])


m4_define([b4_symbol(21, number)],
[[21]])


m4_define([b4_symbol(70, has_printer)],
[[0]])


m4_define([b4_symbol(11, number)],
[[11]])


m4_define([b4_symbol(81, tag)],
[[data_list]])


m4_define([b4_symbol(52, user_number)],
[[42]])


m4_define([b4_symbol(5, has_destructor)],
[[0]])


m4_define([b4_symbol(103, has_destructor)],
[[0]])


m4_define([b4_symbol(77, is_token)],
[[0]])


m4_define([b4_symbol(70, has_type)],
[[1]])


m4_define([b4_symbol(71, user_number)],
[[-1]])


m4_define([b4_symbol(13, tag)],
[[FUNC_CALL]])


m4_define([b4_symbol(6, is_token)],
[[1]])


m4_define([b4_symbol(104, is_token)],
[[0]])


m4_define([b4_symbol(90, user_number)],
[[-1]])


m4_define([b4_symbol(48, id)],
[[AND]])


m4_define([b4_pact_ninf],
[[-56]])


m4_define([b4_symbol(93, type)],
[[]])


m4_define([b4_symbol(33, has_type)],
[[0]])


m4_define([b4_symbol(69, has_destructor)],
[[0]])


m4_define([b4_rline_min],
[[0]])


m4_define([b4_states_number],
[[213]])


m4_define([b4_symbol(85, tag)],
[[stmt]])


m4_define([b4_symbol(62, has_destructor)],
[[0]])


m4_define([b4_symbol(5, has_id)],
[[1]])


m4_define([b4_symbol(103, has_id)],
[[1]])


m4_define([b4_defgoto],
[[    -1,     1,    14,    78,   175,   176,   177,    15,    16,    17,
     115,   116,    53,   108,   157,   152,   153,   154,   155,    56,
      57,    19,    76,    20,   128,    41,    22,   120,    42,   136,
      43,   164,    44,    45,    46,    72,    64,    47,    80,    83,
     130,   165]])


m4_define([b4_symbol(86, is_token)],
[[0]])


m4_define([b4_symbol(94, has_id)],
[[1]])


m4_define([b4_symbol(17, tag)],
[[CLASS]])


m4_define([b4_symbol(84, has_id)],
[[1]])


m4_define([b4_symbol(88, id)],
[[var_or_member]])


m4_define([b4_symbol(74, has_id)],
[[1]])


m4_define([b4_symbol(47, type)],
[[]])


m4_define([b4_percent_define(lr.default-reduction)],
[[most]])


m4_define([b4_symbol(49, is_token)],
[[1]])


m4_define([b4_percent_define_syncline(lr.default-reduction)],
[[]])


m4_define([b4_symbol(42, has_type)],
[[0]])


m4_define([b4_symbol(64, has_id)],
[[0]])


m4_define([b4_percent_define_bison_variables(lr.keep-unreachable-state)],
[[]])


m4_define([b4_symbol(54, has_id)],
[[0]])


m4_define([b4_symbol(34, id)],
[[ARRAY_LIST]])


m4_define([b4_symbol(102, has_printer)],
[[0]])


m4_define([b4_symbol(4, has_printer)],
[[0]])


m4_define([b4_symbol(44, has_id)],
[[1]])


m4_define([b4_symbol(89, tag)],
[[assignment_var_or_member]])


m4_define([b4_symbol(34, has_id)],
[[1]])


m4_define([b4_symbol(5, user_number)],
[[260]])


m4_define([b4_symbol(103, user_number)],
[[-1]])


m4_define([b4_symbol(95, is_token)],
[[0]])


m4_define([b4_symbol(24, has_id)],
[[1]])


m4_define([b4_symbol(54, type)],
[[]])


m4_define([b4_symbol(14, has_id)],
[[1]])


m4_define([b4_symbol(55, has_destructor)],
[[0]])


m4_define([b4_symbol(100, tag)],
[[ui]])


m4_define([b4_symbol(2, tag)],
[[$][undefined]])


m4_define([b4_symbol(7, id)],
[[RAND]])


m4_define([b4_symbol(105, id)],
[[table_list]])


m4_define([b4_symbol(58, is_token)],
[[1]])


m4_define([b4_symbol(62, tag)],
[[')']])


m4_define([b4_symbol(51, has_type)],
[[0]])


m4_define([b4_symbol(74, id)],
[[function_def]])


m4_define([b4_symbol(61, type)],
[[]])


m4_define([b4_symbol(14, has_type)],
[[0]])


m4_define([b4_symbol(107, number)],
[[107]])


m4_define([b4_symbol(9, number)],
[[9]])


m4_define([b4_symbol(69, has_printer)],
[[0]])


m4_define([b4_symbol(98, number)],
[[98]])


m4_define([b4_symbol(20, id)],
[[ARROW]])


m4_define([b4_symbol(88, number)],
[[88]])


m4_define([b4_symbol(4, type)],
[[str]])


m4_define([b4_symbol(102, type)],
[[nPtr]])


m4_define([b4_symbol(88, has_printer)],
[[0]])


m4_define([b4_symbol(78, number)],
[[78]])


m4_define([b4_symbol(104, tag)],
[[$][@@3]])


m4_define([b4_symbol(6, tag)],
[[FLOAT]])


m4_define([b4_symbol(68, number)],
[[68]])


m4_define([b4_symbol(66, tag)],
[[$][accept]])


m4_define([b4_symbol(67, is_token)],
[[0]])


m4_define([b4_symbol(60, has_type)],
[[0]])


m4_define([b4_symbol(58, number)],
[[58]])


m4_define([b4_symbol(89, user_number)],
[[-1]])


m4_define([b4_r1_min],
[[0]])


m4_define([b4_symbol(15, type)],
[[]])


m4_define([b4_symbol(48, number)],
[[48]])


m4_define([b4_symbol(48, has_destructor)],
[[0]])


m4_define([b4_symbol(38, number)],
[[38]])


m4_define([b4_symbol(23, has_type)],
[[0]])


m4_define([b4_symbol(28, number)],
[[28]])


m4_define([b4_symbol(60, id)],
[[]])


m4_define([b4_symbol(41, has_destructor)],
[[0]])


m4_define([b4_symbol(18, number)],
[[18]])


m4_define([b4_symbol(49, id)],
[[RAND2]])


m4_define([b4_dprec_max],
[[0]])


m4_define([b4_pgoto_min],
[[-56]])


m4_define([b4_symbol(22, type)],
[[]])


m4_define([b4_symbol(76, is_token)],
[[0]])


m4_define([b4_symbol(89, type)],
[[nPtr]])


m4_define([b4_symbol(17, has_printer)],
[[0]])


m4_define([b4_symbol(5, is_token)],
[[1]])


m4_define([b4_symbol(103, is_token)],
[[0]])


m4_define([b4_symbol(36, has_printer)],
[[0]])


m4_define([b4_symbol(39, is_token)],
[[1]])


m4_define([b4_symbol(32, has_type)],
[[0]])


m4_define([b4_symbol(18, user_number)],
[[273]])


m4_define([b4_symbol(43, tag)],
[[EQ]])


m4_define([b4_symbol(89, id)],
[[assignment_var_or_member]])


m4_define([b4_symbol(55, has_printer)],
[[0]])


m4_define([b4_merger_max],
[[0]])


m4_define([b4_symbol(37, user_number)],
[[292]])


m4_define([b4_symbol(74, has_printer)],
[[0]])


m4_define([b4_symbol(96, type)],
[[nPtr]])


m4_define([b4_symbol(56, user_number)],
[[303]])


m4_define([b4_symbol(85, is_token)],
[[0]])


m4_define([b4_symbol(93, has_printer)],
[[0]])


m4_define([b4_symbol(35, id)],
[[TABLE_LIST]])


m4_define([b4_check],
[[     1,    27,     1,    58,    40,    20,    60,     1,     4,     4,
      20,    12,    55,    12,    61,    61,     3,     4,     5,     6,
       7,     1,    65,    61,     4,    63,    27,    55,     8,     9,
      10,    11,    20,    55,    62,    15,    61,    24,    25,    26,
      62,    20,    20,    20,    24,    24,    61,     4,     4,    64,
       8,     9,    24,    40,    64,    24,    57,    58,    57,    58,
      58,    61,    55,    57,    51,     4,    62,    62,    26,    62,
      28,    58,    18,    60,    61,    21,    64,    64,    58,    37,
      60,    39,    61,     4,    60,    64,    64,    64,    55,    61,
      55,    63,    61,    60,    63,    60,    60,   133,    50,    51,
      52,    53,    54,    61,    55,    63,    61,     4,    59,    63,
       4,   112,    61,   112,    64,    58,    74,     5,   112,    60,
     121,     4,   121,   124,   125,   124,   125,   121,    63,   184,
     124,   125,    90,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,    52,    53,    54,    60,
      62,     3,     4,     5,     6,     7,    20,    61,    61,     4,
       4,     4,    18,     4,   122,   191,     4,    20,     4,    61,
      61,    58,    24,    25,    26,    55,     4,    62,    55,    63,
      37,     4,     4,   184,    62,   184,     4,   194,    40,   160,
     191,   192,   158,   192,   185,    45,   182,    -1,   192,    51,
     136,   202,    41,   202,   162,    80,    58,    -1,   202,    61,
      -1,    -1,    64,     3,     4,     5,     6,     7,    -1,   177,
     178,    -1,     0,     1,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    10,    11,    24,    25,    26,    15,    -1,    17,
      -1,    -1,    -1,    -1,     1,    -1,    24,     4,    -1,    -1,
      40,     8,     9,    10,    11,    -1,     1,    -1,    15,     4,
      -1,    51,    -1,     8,     9,    10,    11,    24,    58,    -1,
      15,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    24,
      58,     1,    60,    -1,     4,    -1,    -1,    -1,     8,     9,
      10,    11,    -1,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      -1,    58,    59,    60,    24,    -1,    -1,    -1,    -1,     1,
      -1,    -1,     4,    58,    59,    60,     8,     9,    10,    11,
      -1,     1,    -1,    15,     4,    -1,    -1,    -1,     8,     9,
      10,    11,    24,    -1,    -1,    15,    -1,    -1,    58,    59,
      60,    -1,    -1,    -1,    24,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    60,    65,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,
      60,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    53,    54,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    65,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      65,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    53,    54,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    62,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    54,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    62,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    54,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    62,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    53,
      54,    -1,    -1,    -1,    -1,    -1,    60,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    53,
      54,    -1,    -1,    -1,    -1,    -1,    60,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    53,
      54,    -1,    -1,    -1,    -1,    -1,    60,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    53,
      54]])


m4_define([b4_symbol(34, has_destructor)],
[[0]])


m4_define([b4_symbol(75, user_number)],
[[-1]])


m4_define([b4_symbol(94, has_destructor)],
[[0]])


m4_define([b4_symbol(94, user_number)],
[[-1]])


m4_define([b4_symbol(48, is_token)],
[[1]])


m4_define([b4_symbol(41, has_type)],
[[0]])


m4_define([b4_symbol(47, tag)],
[[OR]])


m4_define([b4_yacc_flag],
[[0]])


m4_define([b4_symbol(8, id)],
[[WHILE]])


m4_define([b4_symbol(106, id)],
[[expr]])


m4_define([b4_symbol(75, id)],
[[func_name]])


m4_define([b4_symbol(94, is_token)],
[[0]])


m4_define([b4_symbol(20, tag)],
[[ARROW]])


m4_define([b4_parser_file_name],
[[Tig.cpp]])


m4_define([b4_undef_token_number],
[[2]])


m4_define([b4_pgoto],
[[   -56,   -56,   -56,   -56,   -56,    -7,   -56,   -56,   -56,   -56,
       9,    29,   -56,   -56,   -56,    34,    14,   -56,   -56,     6,
     -55,   -26,   -56,   -56,   -56,    -1,   -56,   -56,   -56,   -56,
       1,    64,   -56,   -56,   150,   -56,   161,   -36,   -56,   -56,
      42,   125]])


m4_define([b4_symbol(21, id)],
[[BASED_ON]])


m4_define([b4_symbol(22, has_printer)],
[[0]])


m4_define([b4_symbol(50, has_type)],
[[0]])


m4_define([b4_symbol(57, is_token)],
[[1]])


m4_define([b4_symbol(57, type)],
[[]])


m4_define([b4_symbol(27, has_destructor)],
[[0]])


m4_define([b4_symbol(87, has_destructor)],
[[0]])


m4_define([b4_symbol(41, has_printer)],
[[0]])


m4_define([b4_percent_define_how(parse.error)],
[[2]])


m4_define([b4_symbol(106, has_printer)],
[[0]])


m4_define([b4_symbol(8, has_printer)],
[[0]])


m4_define([b4_symbol(23, user_number)],
[[278]])


m4_define([b4_symbol(20, has_destructor)],
[[0]])


m4_define([b4_symbol(92, tag)],
[[function_call]])


m4_define([b4_symbol(13, has_type)],
[[0]])


m4_define([b4_symbol(60, has_printer)],
[[0]])


m4_define([b4_symbol(80, has_destructor)],
[[0]])


m4_define([b4_symbol(42, user_number)],
[[297]])


m4_define([b4_symbol(0, has_id)],
[[0]])


m4_define([b4_symbol(9, user_number)],
[[264]])


m4_define([b4_symbol(107, user_number)],
[[-1]])


m4_define([b4_symbol(24, tag)],
[[SUPERCLASS]])


m4_define([b4_symbol(64, type)],
[[]])


m4_define([b4_symbol(61, user_number)],
[[40]])


m4_define([b4_symbol(61, id)],
[[]])


m4_define([b4_symbol(66, is_token)],
[[0]])


m4_define([b4_symbol(80, user_number)],
[[-1]])


m4_define([b4_symbol(7, type)],
[[str]])


m4_define([b4_symbol(105, type)],
[[nPtr]])


m4_define([b4_symbol(96, tag)],
[[call_func_name]])


m4_define([b4_symbol(29, is_token)],
[[1]])


m4_define([b4_symbol(22, has_type)],
[[0]])


m4_define([b4_symbol(71, type)],
[[nPtr]])


m4_define([b4_symbol(18, type)],
[[]])


m4_define([b4_symbol(28, tag)],
[[RESERVED_SIZE]])


m4_define([b4_check_max],
[[202]])


m4_define([b4_symbol(13, has_destructor)],
[[0]])


m4_define([b4_symbol(73, has_destructor)],
[[0]])


m4_define([b4_symbol(75, is_token)],
[[0]])


m4_define([b4_percent_define_loc(lr.type)],
[[[[<default value>:-1.-1]], [[<default value>:-1.-1]]]])


m4_define([b4_symbol(4, is_token)],
[[1]])


m4_define([b4_symbol(102, is_token)],
[[0]])


m4_define([b4_symbol(36, id)],
[[IFX]])


m4_define([b4_symbol(25, type)],
[[]])


m4_define([b4_symbol(38, is_token)],
[[1]])


m4_define([b4_symbol(31, has_type)],
[[0]])


m4_define([b4_symbol(4, number)],
[[4]])


m4_define([b4_symbol(107, has_destructor)],
[[0]])


m4_define([b4_symbol(102, number)],
[[102]])


m4_define([b4_symbol(9, has_destructor)],
[[0]])


m4_define([b4_symbol(93, number)],
[[93]])


m4_define([b4_symbol(83, number)],
[[83]])


m4_define([b4_symbol(2, has_destructor)],
[[0]])


m4_define([b4_symbol(100, has_destructor)],
[[0]])


m4_define([b4_symbol(73, number)],
[[73]])


m4_define([b4_symbol(73, tag)],
[[definition]])


m4_define([b4_symbol(63, number)],
[[63]])


m4_define([b4_symbol(84, is_token)],
[[0]])


m4_define([b4_symbol(9, id)],
[[FOR]])


m4_define([b4_symbol(107, id)],
[[expr_sequence]])


m4_define([b4_symbol(32, type)],
[[]])


m4_define([b4_symbol(53, number)],
[[53]])


m4_define([b4_symbol(99, type)],
[[nPtr]])


m4_define([b4_symbol(43, number)],
[[43]])


m4_define([b4_symbol(76, id)],
[[param_list]])


m4_define([b4_symbol(66, has_destructor)],
[[0]])


m4_define([b4_symbol(40, has_type)],
[[0]])


m4_define([b4_symbol(47, is_token)],
[[1]])


m4_define([b4_symbol(33, number)],
[[33]])


m4_define([b4_symbol(23, number)],
[[23]])


m4_define([b4_symbol(59, has_printer)],
[[0]])


m4_define([b4_defact_max],
[[111]])


m4_define([b4_symbol(13, number)],
[[13]])


m4_define([b4_symbol(22, id)],
[[ARRAY]])


m4_define([b4_symbol(78, has_printer)],
[[0]])


m4_define([b4_symbol(77, tag)],
[[param_name]])


m4_define([b4_version],
[[3.0]])


m4_define([b4_symbol(93, is_token)],
[[0]])


m4_define([b4_symbol(97, has_printer)],
[[0]])


m4_define([b4_symbol(79, user_number)],
[[-1]])


m4_define([b4_symbol(56, is_token)],
[[1]])


m4_define([b4_symbol(98, user_number)],
[[-1]])


m4_define([b4_symbol(50, tag)],
[['+']])


m4_define([b4_symbol(62, id)],
[[]])


m4_define([b4_percent_define_kind(lr.type)],
[[keyword]])


m4_define([b4_symbol(59, has_destructor)],
[[0]])


m4_define([b4_symbol(12, has_type)],
[[0]])


m4_define([b4_symbol(105, has_id)],
[[1]])


m4_define([b4_symbol(19, is_token)],
[[1]])


m4_define([b4_symbol(7, has_id)],
[[1]])


m4_define([b4_symbol(96, has_id)],
[[1]])


m4_define([b4_symbol(0, user_number)],
[[0]])


m4_define([b4_symbol(86, has_id)],
[[1]])


m4_define([b4_symbol(52, has_destructor)],
[[0]])


m4_define([b4_symbol(76, has_id)],
[[1]])


m4_define([b4_symbol(66, has_id)],
[[0]])


m4_define([b4_symbol(65, is_token)],
[[1]])


m4_define([b4_symbol(26, has_printer)],
[[0]])


m4_define([b4_symbol(56, has_id)],
[[1]])


m4_define([b4_symbol(54, tag)],
[['%']])


m4_define([b4_symbol(67, type)],
[[]])


m4_define([b4_symbol(46, has_id)],
[[0]])


m4_define([b4_table],
[[    21,    70,    23,   112,    82,   -57,    24,    18,   113,   113,
      62,    21,   133,    23,    26,    27,    29,    30,    49,    32,
      33,     3,   134,   -65,    55,   -53,    71,   160,     5,     6,
       7,     8,    84,   194,   161,     9,    28,    11,    34,    35,
     195,   -56,   123,   -58,    11,    25,   -65,    52,    54,   -57,
      48,    51,    25,    36,    63,    25,    21,    21,    23,    23,
      58,    59,   160,   110,    37,    67,   114,   203,    68,   212,
      73,    38,   106,    50,    39,   107,    63,    40,    12,    79,
      13,    81,   -63,    69,    60,   -56,    63,   -58,   182,   -17,
     182,   -52,   -63,   183,   -52,   206,    65,   180,    99,   100,
     101,   102,   103,   117,   178,   119,    66,    75,   179,    61,
      77,    21,    86,    23,    74,    38,   126,    88,   110,    87,
      21,   118,    23,    21,    21,    23,    23,   166,   -52,   202,
     169,   170,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   101,   102,   103,   122,
     124,    29,    30,    31,    32,    33,   127,    -6,   129,   135,
     151,   156,   158,   168,   167,   208,   172,   173,   174,   -33,
     185,   184,    11,    34,    35,   186,   113,   190,   178,   -53,
     192,   193,   199,    21,   198,    23,   205,   210,    36,   188,
      71,    21,   187,    23,   204,    89,   200,     0,   209,    37,
     181,    21,    85,    23,   189,   131,    38,     0,   110,    39,
       0,     0,    40,    29,    30,    49,    32,    33,     0,   196,
     197,     0,     2,     3,     0,     0,     4,     0,     0,     0,
       5,     6,     7,     8,    11,    34,    35,     9,     0,    10,
       0,     0,     0,     0,     3,     0,    11,    55,     0,     0,
      36,     5,     6,     7,     8,     0,     3,     0,     9,    55,
       0,    37,     0,     5,     6,     7,     8,    11,    38,     0,
       9,    39,     0,     0,    40,     0,     0,     0,     0,    11,
      12,     3,    13,     0,    55,     0,     0,     0,     5,     6,
       7,     8,     0,     0,     0,     9,     0,     0,     0,     0,
       0,    12,   109,    13,    11,     0,     0,     0,     0,     3,
       0,     0,    55,    12,   111,    13,     5,     6,     7,     8,
       0,     3,     0,     9,    55,     0,     0,     0,     5,     6,
       7,     8,    11,     0,     0,     9,     0,     0,    12,   159,
      13,     0,     0,     0,    11,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   162,
       0,     0,     0,     0,     0,     0,    12,   201,    13,   163,
       0,     0,     0,     0,     0,     0,     0,     0,    12,   211,
      13,    90,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   171,    90,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     207,    90,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,     0,     0,     0,     0,     0,
       0,     0,   121,    90,    91,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,     0,     0,     0,
       0,     0,     0,     0,   125,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,     0,
       0,     0,     0,     0,     0,     0,   132,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,     0,     0,     0,     0,     0,   104,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,     0,     0,     0,     0,     0,   105,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,     0,     0,     0,     0,     0,   191,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103]])


m4_define([b4_symbol(45, has_printer)],
[[0]])


m4_define([b4_symbol(36, has_id)],
[[1]])


m4_define([b4_symbol(21, has_type)],
[[0]])


m4_define([b4_symbol(27, user_number)],
[[282]])


m4_define([b4_symbol(28, is_token)],
[[1]])


m4_define([b4_symbol(26, has_id)],
[[1]])


m4_define([b4_symbol(64, has_printer)],
[[0]])


m4_define([b4_symbol(16, has_id)],
[[1]])


m4_define([b4_symbol(46, user_number)],
[[60]])


m4_define([b4_symbol(37, id)],
[[ELSE]])


m4_define([b4_symbol(83, has_printer)],
[[0]])


m4_define([b4_symbol(74, type)],
[[nPtr]])


m4_define([b4_symbol(65, user_number)],
[[93]])


m4_define([b4_symbol(74, is_token)],
[[0]])


m4_define([b4_symbol(84, user_number)],
[[-1]])


m4_define([b4_symbol(58, tag)],
[['{']])


m4_define([b4_symbol(45, has_destructor)],
[[0]])


m4_define([b4_symbol(3, is_token)],
[[1]])


m4_define([b4_defines_flag],
[[1]])


m4_define([b4_symbol(101, is_token)],
[[0]])


m4_define([b4_symbol(30, has_type)],
[[0]])


m4_define([b4_synclines_flag],
[[1]])


m4_define([b4_symbol(37, is_token)],
[[1]])


m4_define([b4_percent_define_user_variables],
[[[[[[parse.error]], [[Tig.y:85.1]], [[Tig.y:85.15]]]]]])


m4_define([b4_symbol(81, type)],
[[nPtr]])


m4_define([b4_symbol(77, id)],
[[param_name]])


m4_define([b4_symbol(31, tag)],
[[DEREF_ASSIGN]])


m4_define([b4_symbol(28, type)],
[[]])


m4_define([b4_symbol(83, is_token)],
[[0]])


m4_define([b4_symbol(23, id)],
[[TABLE]])


m4_define([b4_symbol(12, has_printer)],
[[0]])


m4_define([b4_symbols_number],
[[108]])


m4_define([b4_symbol(31, has_printer)],
[[0]])


m4_define([b4_symbol(46, is_token)],
[[1]])


m4_define([b4_symbol(35, type)],
[[]])


m4_define([b4_symbol(13, user_number)],
[[268]])


m4_define([b4_symbol(50, has_printer)],
[[0]])


m4_define([b4_symbol(38, has_destructor)],
[[0]])


m4_define([b4_symbol(98, has_destructor)],
[[0]])


m4_define([b4_symbol(32, user_number)],
[[287]])


m4_define([b4_symbol(35, tag)],
[[TABLE_LIST]])


m4_define([b4_symbol(31, has_destructor)],
[[0]])


m4_define([b4_symbol(51, user_number)],
[[45]])


m4_define([b4_symbol(63, id)],
[[]])


m4_define([b4_symbol(92, is_token)],
[[0]])


m4_define([b4_symbol(91, has_destructor)],
[[0]])


m4_define([b4_toknum],
[[     0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,    62,    60,   300,   301,   302,
      43,    45,    42,    47,    37,    44,   303,   304,   123,   125,
      59,    40,    41,    61,    91,    93]])


m4_define([b4_symbol(70, user_number)],
[[-1]])


m4_define([b4_symbol(42, type)],
[[]])


m4_define([b4_symbol(55, is_token)],
[[1]])


m4_define([b4_symbol(39, tag)],
[[FUNC]])


m4_define([b4_symbol(18, is_token)],
[[1]])


m4_define([b4_symbol(11, has_type)],
[[0]])


m4_define([b4_symbol(80, tag)],
[[class_list]])


m4_define([b4_symbol(12, tag)],
[[PRINT_VALERIC]])


m4_define([b4_symbol(24, has_destructor)],
[[0]])


m4_define([b4_symbol(64, is_token)],
[[1]])


m4_define([b4_epilogue],
[[]b4_syncline(451, [["Tig.y"]])[










/** Create a function node for a call to the named superclass member function.  */
CSyntaxNode *SupMembFnCallNode(char* Name) {
    CSyntaxNode *Node = new CSyntaxNode(typeId);

	//Search for it as a member func of the parent class first.
	SymDesc* Fn = SymbTable.Find (CURRENT_CLASS_PARENT, Name);
	if (Fn != NULL) {
		Node->symbol = 0;
		Node->value = Fn->MemberNo;
		Node->NodeType = typeSuperMemb;
		return Node;
	}	


	//Not found? 
	Error("'%s' referenced as a function of the parent class, but no such function found.",Name);
	return Node;
}


/** Create a symbol table entry for this parameter. No need to create a syntax node as this requires no code.*/
void DeclParam(char* Name, char* Ptr) {
	if (SymbTable.Find (CURRENT_FN,Name) == NULL) {  //if this parameter name isn't already assigned to the current function...
		SymDesc* Param = new SymDesc (Name, PAR,  lineno);
		bool Result = SymbTable.Add(CURRENT_FN, Param); 
		if (!Result) {
			Error("Too many parameters!");
			return;
		}

	}
	else
		Error("'%s' already declared as a parameter name for this function.",Name);

}


/** Create a syntax node for this class declaration; enter the class on the symbol table.  */
CSyntaxNode* DeclClassNode(char* Name) {
	CSyntaxNode *Node = new CSyntaxNode(typeId);

	if ( SymbTable.Find (GLOBAL_SCOPE, Name) == NULL)   { // Class doesn't exist yet; create it
		SymDesc* Class = new SymDesc (Name, CLASS_SYM,  lineno);
		Node->symbol = Class;
		SymbTable.Add ( GLOBAL_SCOPE, Class);
	}
	else
		Error("Global identifier '%s' is already in use.",Name); 

    return Node;
}


/** Create a symbol table entry for the named class data-member. No need to create a syntax node as this requires no code.*/
void DeclDataMember(char* name) {
 	if ( (SymbTable.Find (CURRENT_CLASS,name) == NULL) && (SymbTable.Find (CURRENT_CLASS_PARENT,name) == NULL) ) {
		SymDesc* symbol = new SymDesc (name, DATA_MEMBER,  lineno);
		SymbTable.Add(CURRENT_CLASS, symbol);
	}
	else
		Error("'%s' is already declared as a member name for this class, or a parent class.",name);
}


//Create class declaration operator node
CSyntaxNode* ClassOpNode(CSyntaxNode* Name, CSyntaxNode* Parents, CSyntaxNode* Members, int ParentCount) {
    CSyntaxNode* Node = new CSyntaxNode(typeOpr);
	 Node->oper = CLASS;
    Node->nops = 3;
	Node->value = ParentCount;

	Node->op@{0@} = Name;
	Node->op@{1@} = Parents;
	Node->op@{2@} = Members;


	Name->symbol->Value = Name->symbol->NoDataMembers  ;

	if (ParentCount > 0)
			Name->symbol->Value += SyntaxObj.TotalMembs; //calculate total data members including inherited. Needed to calculate storage space for instances.

	//Now that we've finished defining this class, it's no longer the current class:
	SymbTable.ClearCurrentClass();
	
	return Node;
}

/** Create array declaration operator node */
CSyntaxNode* DeclArrayNode(CSyntaxNode* Dimension) {
    CSyntaxNode* Node = new CSyntaxNode(typeOpr);
	Node->oper = ARRAY;
    Node->nops = 1;

	Node->op@{0@} = Dimension;
	
	return Node;
}

/** Create table declaration operator node */
CSyntaxNode* DeclTableNode(CSyntaxNode* Rows, CSyntaxNode* Columns) {
    CSyntaxNode* Node = new CSyntaxNode(typeOpr);
	Node->oper = TABLE;
    Node->nops = 2;

	Node->op@{0@} = Rows;
	Node->op@{1@} = Columns;
	
	return Node;
}


/** Create a node for a random number generation. */
CSyntaxNode* RandNode(char* Str,CSyntaxNode* Throws, CSyntaxNode* Dice)
{
    CSyntaxNode* Node = new CSyntaxNode(typeOpr);
	Node->oper = RAND;
    Node->nops = 2;

	char* EndStr;
	if (Str != NULL) {
		long n = strtol(Str, &EndStr, 10);
		long r = strtol(EndStr+1, NULL, 10);
		if (( n <= INT_MIN) || (n >= INT_MAX ) || ( r <= INT_MIN) || (r >= INT_MAX ))
				Error("Number out of range in random number generation.");	
			
		Node->op@{0@} = SyntaxObj.IntegerConstant(n);
		Node->op@{1@} = SyntaxObj.IntegerConstant(r);
	}
	else {
		Node->op@{0@} = Throws;
		Node->op@{1@} = Dice;
	}
		
	return Node;
}

CSyntaxNode* InitMemberNode(char* MemberName)
{
	CSyntaxNode *Node = new CSyntaxNode(typeMemb);
	SymDesc* Member = SymbTable.Find(CURRENT_OBJ,MemberName); //Does this member belong to the class of the current object?
	if ( Member == NULL) {								  
		Error("%s is not a member of %s",MemberName,SymbTable.CurrentObj->Name);
		return Node;
	}
	
	//Node = new CSyntaxNode(typeMemb);
	//Node->symbol = Obj->symbol; 
	Node->value = Member->MemberNo;
	return Node;
}

//Add a parent class to the current class.
void AddParentToCurrentClass(char* ParentName)
{	
	SymDesc* ParentClass	 = SymbTable.Find (GLOBAL_SCOPE,ParentName);	 	//get the class symbol for the parent
	bool Result = SymbTable.Add ( CURRENT_CLASS_PARENT, ParentClass); //add it to the symbol table
}


//Simple kludge that removes the final ARROW operation where a value is being assigned to a obj->member.
//This is because we don't want the value of the member on the stack, which is the default value.
//This way, the last thing on the stack will be the member number.
void RemoveFinalGetproperty() {
	if (FinalMembNode)
		FinalMembNode->oper = ';';

}

/** Create array declaration operator node */
CSyntaxNode* NewListArrayNode(CSyntaxNode* Initialisation, int Dimension) {
    CSyntaxNode* Node = new CSyntaxNode(typeOpr);
	Node->oper = ARRAY_LIST;
    Node->nops = 1;

	Node->op@{0@} = Initialisation;
	Node->value = Dimension;
	
	return Node;
}


CSyntaxNode* NewListTableNode(CSyntaxNode* Initialisation, int Cols, int Rows) { 
   CSyntaxNode* Node = new CSyntaxNode(typeOpr);
	Node->oper = TABLE_LIST;
    Node->nops = 1;

	Node->op@{0@} = Initialisation;
	Node->value = Cols;
	Node->value2 = Rows;
	
	return Node;
}

/** Delete this node and any sub-nodes, freeing the memory. */
void FreeNode(CSyntaxNode *p) {
    int i;

    if (!p) return; 
	if (p->NodeType == typeOpr) {
        for (i = 0; i < p->nops; i++)
            FreeNode(p->op@{i@});
    }
	
	delete p;
}



]])


m4_define([b4_symbol(84, has_destructor)],
[[0]])


m4_define([b4_symbol(38, id)],
[[PRINT_COMPLEX]])


m4_define([b4_symbol(3, has_printer)],
[[0]])


m4_define([b4_symbol(101, has_printer)],
[[0]])


m4_define([b4_symbol(27, is_token)],
[[1]])


m4_define([b4_symbol(20, has_type)],
[[0]])


m4_define([b4_symbol(84, tag)],
[[member_func_name]])


m4_define([b4_symbol(4, user_number)],
[[259]])


m4_define([b4_symbol(102, user_number)],
[[-1]])


m4_define([b4_percent_define_kind(lr.keep-unreachable-state)],
[[keyword]])


m4_define([b4_spec_defines_file],
[[Tig.hpp]])


m4_define([b4_symbol(16, tag)],
[[LOCAL_VAR]])


m4_define([b4_symbol(78, id)],
[[class_name_dec]])


m4_define([b4_symbol(73, is_token)],
[[0]])


m4_define([b4_pact_max],
[[516]])


m4_define([b4_symbol(10, type)],
[[]])


m4_define([b4_symbol(2, is_token)],
[[0]])


m4_define([b4_symbol(100, is_token)],
[[0]])


m4_define([b4_symbol(77, type)],
[[nPtr]])


m4_define([b4_translate],
[[     0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,    54,     2,     2,
      61,    62,    52,    50,    55,    51,     2,    53,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,    60,
      46,    63,    45,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,    64,     2,    65,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,    58,     2,    59,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      47,    48,    49,    56,    57]])


m4_define([b4_symbol(49, has_printer)],
[[0]])


m4_define([b4_symbol(17, has_destructor)],
[[0]])


m4_define([b4_symbol(77, has_destructor)],
[[0]])


m4_define([b4_symbol(24, id)],
[[SUPERCLASS]])


m4_define([b4_symbol(36, is_token)],
[[1]])


m4_define([b4_symbol(2, has_id)],
[[0]])


m4_define([b4_symbol(100, has_id)],
[[1]])


m4_define([b4_symbol(88, tag)],
[[var_or_member]])


m4_define([b4_symbol(68, has_printer)],
[[0]])


m4_define([b4_symbol(91, has_id)],
[[1]])


m4_define([b4_symbol(10, has_destructor)],
[[0]])


m4_define([b4_symbol(81, has_id)],
[[1]])


m4_define([b4_symbol(70, has_destructor)],
[[0]])


m4_define([b4_symbol(87, has_printer)],
[[0]])


m4_define([b4_symbol(71, has_id)],
[[1]])


m4_define([b4_symbol(69, user_number)],
[[-1]])


m4_define([b4_symbol(82, is_token)],
[[0]])


m4_define([b4_symbol(84, type)],
[[nPtr]])


m4_define([b4_symbol(61, has_id)],
[[0]])


m4_define([b4_symbol(1, tag)],
[[error]])


m4_define([b4_symbol(51, has_id)],
[[0]])


m4_define([b4_symbol(88, user_number)],
[[-1]])


m4_define([b4_symbol(61, tag)],
[['(']])


m4_define([b4_symbol(41, has_id)],
[[1]])


m4_define([b4_symbol(64, id)],
[[]])


m4_define([b4_symbol(104, has_destructor)],
[[0]])


m4_define([b4_symbol(6, has_destructor)],
[[0]])


m4_define([b4_symbol(45, is_token)],
[[1]])


m4_define([b4_symbol(31, has_id)],
[[1]])


m4_define([b4_defact],
[[     4,     0,     1,     0,    56,     0,     0,     0,     0,     0,
       0,     0,     0,    34,     3,     2,     0,     0,     5,     0,
       0,     0,     0,     0,    46,     0,     0,     0,     0,    80,
      83,    81,    82,   108,     0,   104,     0,     0,    76,     0,
       0,     0,    84,     0,     0,     0,    70,   105,     0,    81,
      44,     0,    21,     0,    64,    56,    47,     0,     0,     0,
      36,     0,     0,     0,    58,    43,    59,    66,     0,    56,
       0,     0,     0,     0,     0,    50,   103,    85,     0,    88,
       0,     0,    78,     0,     0,   107,    61,    38,    69,    71,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    37,    45,     0,     0,     0,    35,
      48,    12,     0,    20,    16,     0,    18,    49,    57,     0,
      68,     0,     0,     0,     0,     0,     0,     0,    51,     0,
     110,     0,   102,     0,   106,    87,    68,    98,    99,   101,
     100,    95,    94,    97,    96,   109,    89,    90,    91,    92,
      93,    25,     0,    27,     0,     0,    23,    22,     0,    11,
       0,    15,     0,    74,     0,    67,    39,     0,    57,    40,
      41,    72,    54,     0,    10,     0,     7,     0,     0,    77,
      79,     0,     0,    13,     0,     0,     0,     0,    19,     0,
      60,     0,     0,    55,     0,    86,     9,   111,    62,    26,
      28,    30,     0,    32,     0,    24,    14,    75,    73,    42,
       8,    29,    31]])


m4_define([b4_symbol(21, has_id)],
[[1]])


m4_define([b4_symbol(11, has_id)],
[[1]])


m4_define([b4_symbol(91, type)],
[[nPtr]])


m4_define([b4_symbol(10, id)],
[[IF]])


m4_define([b4_symbol(38, type)],
[[]])


m4_define([b4_symbol(5, tag)],
[[STRING]])


m4_define([b4_symbol(103, tag)],
[[array_list]])


m4_define([b4_symbol(91, is_token)],
[[0]])


m4_define([b4_symbol(65, tag)],
[['@}']])


m4_define([b4_symbol(16, has_printer)],
[[0]])


m4_define([b4_symbol(63, has_destructor)],
[[0]])


m4_define([b4_symbol(54, is_token)],
[[1]])


m4_define([b4_symbol(104, number)],
[[104]])


m4_define([b4_symbol(35, has_printer)],
[[0]])


m4_define([b4_symbol(6, number)],
[[6]])


m4_define([b4_symbol(95, number)],
[[95]])


m4_define([b4_symbol(99, has_type)],
[[1]])


m4_define([b4_symbol(17, user_number)],
[[272]])


m4_define([b4_symbol(85, number)],
[[85]])


m4_define([b4_symbol(54, has_printer)],
[[0]])


m4_define([b4_symbol(45, type)],
[[]])


m4_define([b4_symbol(50, id)],
[[]])


m4_define([b4_symbol(75, number)],
[[75]])


m4_define([b4_symbol(36, user_number)],
[[291]])


m4_define([b4_symbol(39, id)],
[[FUNC]])


m4_define([b4_symbol(10, has_type)],
[[0]])


m4_define([b4_symbol(73, has_printer)],
[[0]])


m4_define([b4_symbol(17, is_token)],
[[1]])


m4_define([b4_symbol(9, tag)],
[[FOR]])


m4_define([b4_symbol(107, tag)],
[[expr_sequence]])


m4_define([b4_symbol(65, number)],
[[65]])


m4_define([b4_tokens_number],
[[66]])


m4_define([b4_symbol(55, user_number)],
[[44]])


m4_define([b4_symbol(69, tag)],
[[class_name]])


m4_define([b4_symbol(92, has_printer)],
[[0]])


m4_define([b4_symbol(55, number)],
[[55]])


m4_define([b4_symbol(74, user_number)],
[[-1]])


m4_define([b4_symbol(45, number)],
[[45]])


m4_define([b4_symbol(52, type)],
[[]])


m4_define([b4_symbol(35, number)],
[[35]])


m4_define([b4_symbol(63, is_token)],
[[1]])


m4_define([b4_symbol(93, user_number)],
[[-1]])


m4_define([b4_dprec_min],
[[0]])


m4_define([b4_symbol(25, number)],
[[25]])


m4_define([b4_symbol(56, has_destructor)],
[[0]])


m4_define([b4_symbol(90, id)],
[[memberOf]])


m4_define([b4_symbol(15, number)],
[[15]])


m4_define([b4_symbol(42, tag)],
[[LE]])


m4_define([b4_symbol(79, id)],
[[class_parents]])


m4_define([b4_translate_max],
[[65]])


m4_define([b4_symbol(26, is_token)],
[[1]])


m4_define([b4_nondeterministic_flag],
[[1]])


m4_define([b4_percent_define_bison_variables(lr.default-reduction)],
[[]])


m4_define([b4_symbol(25, id)],
[[DATA_TYPE]])


m4_define([b4_merger_min],
[[0]])


m4_define([b4_symbol(72, is_token)],
[[0]])


m4_define([b4_symbol(2, type)],
[[]])


m4_define([b4_symbol(100, type)],
[[nPtr]])


m4_define([b4_symbol(21, has_printer)],
[[0]])


m4_define([b4_symbol(46, tag)],
[['<']])


m4_define([b4_symbol(1, is_token)],
[[0]])


m4_define([b4_symbol(40, has_printer)],
[[0]])


m4_define([b4_symbol(7, has_printer)],
[[0]])


m4_define([b4_symbol(107, has_id)],
[[1]])


m4_define([b4_symbol(105, has_printer)],
[[0]])


m4_define([b4_symbol(9, has_id)],
[[1]])


m4_define([b4_symbol(35, is_token)],
[[1]])


m4_define([b4_symbol(98, has_id)],
[[1]])


m4_define([b4_conflicting_rules_max],
[[63]])


m4_define([b4_symbol(22, user_number)],
[[277]])


m4_define([b4_symbol(13, type)],
[[]])


m4_define([b4_symbol(88, has_id)],
[[1]])


m4_define([b4_symbol(49, has_destructor)],
[[0]])


m4_define([b4_symbol(41, user_number)],
[[296]])


m4_define([b4_symbol(65, id)],
[[]])


m4_define([b4_symbol(106, user_number)],
[[-1]])


m4_define([b4_symbol(8, user_number)],
[[263]])


m4_define([b4_symbol(78, has_id)],
[[1]])


m4_define([b4_symbol(9, has_type)],
[[0]])


m4_define([b4_symbol(107, has_type)],
[[1]])


m4_define([b4_symbol(68, has_id)],
[[1]])


m4_define([b4_symbol(60, user_number)],
[[59]])


m4_define([b4_symbol(58, has_id)],
[[0]])


m4_define([b4_symbol(42, has_destructor)],
[[0]])


m4_define([b4_symbol(81, is_token)],
[[0]])


m4_define([b4_rules_number],
[[111]])


m4_define([b4_symbol(48, has_id)],
[[1]])


m4_define([b4_symbol(11, id)],
[[PRINT]])


m4_define([b4_symbol(20, type)],
[[]])


m4_define([b4_symbol(38, has_id)],
[[1]])


m4_define([b4_symbol(87, type)],
[[nPtr]])


m4_define([b4_symbol(28, has_id)],
[[1]])


m4_define([b4_symbol(44, is_token)],
[[1]])


m4_define([b4_symbol(89, has_type)],
[[1]])


m4_define([b4_symbol(18, has_id)],
[[1]])


m4_define([b4_symbol(91, tag)],
[[deref]])


m4_define([b4_symbol(23, tag)],
[[TABLE]])


m4_define([b4_symbol(90, is_token)],
[[0]])


m4_define([b4_symbol(51, id)],
[[]])


m4_define([b4_symbol(94, type)],
[[nPtr]])


m4_define([b4_symbol(35, has_destructor)],
[[0]])


m4_define([b4_symbol(53, is_token)],
[[1]])


m4_define([b4_symbol(95, has_destructor)],
[[0]])


m4_define([b4_symbol(98, has_type)],
[[1]])


m4_define([b4_symbol(95, tag)],
[[$][@@2]])


m4_define([b4_symbol(27, tag)],
[[RESERVED_ADD]])


m4_define([b4_symbol(16, is_token)],
[[1]])


m4_define([b4_symbol(91, id)],
[[deref]])


m4_define([b4_symbol(48, type)],
[[]])


m4_define([b4_symbol(62, is_token)],
[[1]])


m4_define([b4_symbol(39, has_printer)],
[[0]])


m4_define([b4_symbol(99, tag)],
[[ui_list]])


m4_define([b4_check_min],
[[-1]])


m4_define([b4_symbol(26, id)],
[[STR_INPUT]])


m4_define([b4_symbol(58, has_printer)],
[[0]])


m4_define([b4_symbol(55, type)],
[[]])


m4_define([b4_symbol(28, has_destructor)],
[[0]])


m4_define([b4_symbol(25, is_token)],
[[1]])


m4_define([b4_symbol(77, has_printer)],
[[0]])


m4_define([b4_symbol(88, has_destructor)],
[[0]])


m4_define([b4_symbol(59, user_number)],
[[125]])


m4_define([b4_symbol(96, has_printer)],
[[0]])


m4_define([b4_table_ninf],
[[-66]])


m4_define([b4_symbol(21, has_destructor)],
[[0]])


m4_define([b4_symbol(72, tag)],
[[data_member]])


m4_define([b4_symbol(81, has_destructor)],
[[0]])


m4_define([b4_symbol(78, user_number)],
[[-1]])


m4_define([b4_symbol(71, is_token)],
[[0]])


m4_define([b4_symbol(66, id)],
[[]])


m4_define([b4_symbol(97, user_number)],
[[-1]])


m4_define([b4_symbol(1, number)],
[[1]])


m4_define([b4_symbol(62, type)],
[[]])


m4_define([b4_symbol(90, number)],
[[90]])


m4_define([b4_symbol(80, number)],
[[80]])


m4_define([b4_symbol(0, is_token)],
[[1]])


m4_define([b4_defgoto_max],
[[177]])


m4_define([b4_symbol(70, number)],
[[70]])


m4_define([b4_symbol(34, is_token)],
[[1]])


m4_define([b4_symbol(5, type)],
[[str]])


m4_define([b4_symbol(103, type)],
[[nPtr]])


m4_define([b4_max_left_semantic_context],
[[0]])


m4_define([b4_symbol(79, has_type)],
[[1]])


m4_define([b4_symbol(12, id)],
[[PRINT_VALERIC]])


m4_define([b4_symbol(60, number)],
[[60]])


m4_define([b4_symbol(76, tag)],
[[param_list]])


m4_define([b4_symbol(50, number)],
[[50]])


m4_define([b4_symbol(8, has_type)],
[[0]])


m4_define([b4_symbol(106, has_type)],
[[1]])


m4_define([b4_symbol(40, number)],
[[40]])


m4_define([b4_defact_min],
[[0]])


m4_define([b4_symbol(30, number)],
[[30]])


m4_define([b4_symbol(80, is_token)],
[[0]])


m4_define([b4_symbol(16, type)],
[[]])


m4_define([b4_symbol(20, number)],
[[20]])


m4_define([b4_symbol(25, has_printer)],
[[0]])


m4_define([b4_r2_max],
[[7]])


m4_define([b4_percent_define_loc(parse.error)],
[[[[Tig.y:85.1]], [[Tig.y:85.15]]]])


m4_define([b4_conflict_list_heads],
[[     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     1,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0]])


m4_define([b4_symbol(14, has_destructor)],
[[0]])


m4_define([b4_symbol(10, number)],
[[10]])


m4_define([b4_symbol(74, has_destructor)],
[[0]])


m4_define([b4_symbol(44, has_printer)],
[[0]])


m4_define([b4_symbol(52, id)],
[[]])


m4_define([b4_symbol(43, is_token)],
[[1]])


m4_define([b4_symbol(26, user_number)],
[[281]])


m4_define([b4_symbol(88, has_type)],
[[1]])


m4_define([b4_symbol(63, has_printer)],
[[0]])


m4_define([b4_symbol(23, type)],
[[]])


m4_define([b4_symbol(45, user_number)],
[[62]])


m4_define([b4_symbol(82, has_printer)],
[[0]])


m4_define([b4_symbol(64, user_number)],
[[91]])


m4_define([b4_symbol(83, user_number)],
[[-1]])


m4_define([b4_symbol(3, has_destructor)],
[[0]])


m4_define([b4_symbol(101, has_destructor)],
[[0]])


m4_define([b4_symbol(53, tag)],
[['/']])


m4_define([b4_symbol(92, id)],
[[function_call]])


m4_define([b4_symbol(4, has_id)],
[[1]])


m4_define([b4_symbol(102, has_id)],
[[1]])


m4_define([b4_symbol(52, is_token)],
[[1]])


m4_define([b4_symbol(30, type)],
[[]])


m4_define([b4_symbol(93, has_id)],
[[0]])


m4_define([b4_symbol(97, has_type)],
[[1]])


m4_define([b4_symbol(97, type)],
[[nPtr]])


m4_define([b4_symbol(83, has_id)],
[[1]])


m4_define([b4_symbol(67, has_destructor)],
[[0]])


m4_define([b4_symbol(73, has_id)],
[[1]])


m4_define([b4_dprec],
[[     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0]])


m4_define([b4_symbol(15, is_token)],
[[1]])


m4_define([b4_symbol(63, has_id)],
[[0]])


m4_define([b4_symbol(27, id)],
[[RESERVED_ADD]])


m4_define([b4_symbol(53, has_id)],
[[0]])


m4_define([b4_symbol(60, has_destructor)],
[[0]])


m4_define([b4_symbol(43, has_id)],
[[1]])


m4_define([b4_symbol(11, has_printer)],
[[0]])


m4_define([b4_symbol(57, tag)],
[[NON_SEQ]])


m4_define([b4_symbol(33, has_id)],
[[1]])


m4_define([b4_symbol(30, has_printer)],
[[0]])


m4_define([b4_symbol(61, is_token)],
[[1]])


m4_define([b4_symbol(23, has_id)],
[[1]])


m4_define([b4_symbol(12, user_number)],
[[267]])


m4_define([b4_symbol(13, has_id)],
[[1]])


m4_define([b4_symbol(31, user_number)],
[[286]])


m4_define([b4_symbol(67, id)],
[[code]])


m4_define([b4_symbol(24, is_token)],
[[1]])


m4_define([b4_symbol(69, has_type)],
[[1]])


m4_define([b4_symbol(30, tag)],
[[PLIB]])


m4_define([b4_spec_file_prefix],
[[]])


m4_define([b4_symbol(50, user_number)],
[[43]])


m4_define([b4_symbol(58, type)],
[[]])


m4_define([b4_symbol(13, id)],
[[FUNC_CALL]])


m4_define([b4_symbol(8, number)],
[[8]])


m4_define([b4_symbol(106, number)],
[[106]])


m4_define([b4_percent_define_kind(lr.default-reduction)],
[[keyword]])


m4_define([b4_symbol(97, number)],
[[97]])


m4_define([b4_symbol(70, is_token)],
[[0]])


m4_define([b4_symbol(53, has_destructor)],
[[0]])


m4_define([b4_symbol(87, number)],
[[87]])


m4_define([b4_symbol(77, number)],
[[77]])


m4_define([b4_symbol(33, is_token)],
[[1]])


m4_define([b4_symbol(67, number)],
[[67]])


m4_define([b4_symbol(65, type)],
[[]])


m4_define([b4_symbol(78, has_type)],
[[1]])


m4_define([b4_symbol(34, tag)],
[[ARRAY_LIST]])


m4_define([b4_symbol(57, number)],
[[57]])


m4_define([b4_symbol(47, number)],
[[47]])


m4_define([b4_symbol(7, has_type)],
[[1]])


m4_define([b4_symbol(105, has_type)],
[[1]])


m4_define([b4_symbol(53, id)],
[[]])


m4_define([b4_symbol(37, number)],
[[37]])


m4_define([b4_symbol(8, type)],
[[]])


m4_define([b4_symbol(106, type)],
[[nPtr]])


m4_define([b4_symbol(27, number)],
[[27]])


m4_define([b4_symbol(17, number)],
[[17]])


m4_define([b4_symbol(72, type)],
[[nPtr]])


m4_define([b4_pact],
[[   -56,   222,   -56,   -54,    28,   -47,   -46,   -25,   148,    13,
      43,    44,    20,   -56,   -56,   -56,     2,     0,   -56,    24,
      46,   -10,    36,    45,   -56,    61,   210,    79,   210,   -56,
      21,    50,   -56,   -56,   103,   -56,   106,   210,   -56,   210,
      57,    12,   -56,    51,    59,   112,   -56,   -56,   456,   -56,
     -56,   476,   -56,    54,   -56,    31,   -56,   243,   255,     4,
     -56,   210,   117,   210,   -56,   -56,   -56,   -56,   390,    65,
      89,    22,    88,   412,   210,   136,   -56,    96,    97,   -56,
     210,   434,   -56,   -43,   155,    23,   -56,   -56,    50,   -56,
     210,   210,   210,   210,   210,   210,   210,   210,   210,   210,
     210,   210,   210,   210,   -56,   -56,   156,   157,   144,   -56,
     -56,   -56,   280,   -56,   -56,   -28,   -56,   516,   -38,   304,
     210,    20,   210,   159,    20,    20,   340,   162,   147,   164,
     516,    49,   -56,    57,   -56,   -15,   210,    48,    48,    48,
      48,    48,    48,    48,    48,    48,    94,    94,   -56,   -56,
     -56,   108,    33,   -56,   113,   109,   -56,   120,   156,   -56,
     172,   -56,   210,   -56,   115,   123,   -56,   496,   116,   -56,
     143,   -56,   -56,   177,   -56,   -22,   -56,   210,   210,   -56,
     -56,   122,   178,   -56,   308,     5,   182,    35,   -56,   365,
     -56,    79,    20,   -56,   164,   -56,   516,   516,   -56,   108,
     -56,   -56,   320,   -56,     7,   -56,   -56,   -56,   -56,   -56,
     -56,   -56,   -56]])


m4_define([b4_symbol(2, has_printer)],
[[0]])


m4_define([b4_symbol(100, has_printer)],
[[0]])


m4_define([b4_symbol(42, is_token)],
[[1]])


m4_define([b4_symbol(38, tag)],
[[PRINT_COMPLEX]])


m4_define([b4_symbol(19, type)],
[[]])


m4_define([b4_symbol(46, has_destructor)],
[[0]])


m4_define([b4_symbol(87, has_type)],
[[1]])


m4_define([b4_symbol(3, user_number)],
[[258]])


m4_define([b4_symbol(101, user_number)],
[[-1]])


m4_define([b4_symbol(93, id)],
[[]])


m4_define([b4_r1],
[[     0,    66,    67,    67,    67,    68,    69,    70,    70,    71,
      72,    73,    73,    73,    73,    74,    74,    75,    76,    76,
      77,    78,    79,    80,    80,    81,    81,    81,    81,    82,
      82,    83,    83,    84,    85,    85,    85,    85,    85,    85,
      85,    85,    85,    85,    85,    85,    85,    86,    86,    87,
      88,    88,    89,    89,    90,    90,    91,    91,    91,    93,
      92,    95,    94,    96,    96,    96,    96,    97,    97,    98,
      99,    99,   100,   101,   102,   102,   104,   103,   105,   105,
     106,   106,   106,   106,   106,   106,   106,   106,   106,   106,
     106,   106,   106,   106,   106,   106,   106,   106,   106,   106,
     106,   106,   106,   106,   106,   106,   106,   106,   106,   106,
     107,   107]])


m4_define([b4_spec_graph_file],
[[]])


m4_define([b4_r2],
[[     0,     2,     2,     2,     0,     1,     1,     1,     3,     2,
       1,     4,     3,     5,     6,     4,     3,     1,     1,     3,
       1,     1,     2,     1,     3,     1,     3,     1,     3,     4,
       3,     4,     3,     1,     1,     3,     2,     3,     3,     5,
       5,     5,     7,     2,     2,     3,     2,     1,     2,     3,
       1,     2,     1,     3,     2,     3,     1,     3,     2,     0,
       5,     0,     5,     1,     2,     3,     3,     1,     0,     2,
       1,     2,     4,     5,     3,     5,     0,     4,     1,     3,
       1,     1,     1,     1,     1,     2,     5,     3,     2,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     2,     1,     1,     3,     2,     1,     3,
       1,     3]])


m4_define([b4_immediate],
[[     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0]])


m4_define([b4_symbol(26, type)],
[[]])


m4_define([b4_symbol(11, tag)],
[[PRINT]])


m4_define([b4_symbol(29, has_printer)],
[[0]])


m4_define([b4_symbol(28, id)],
[[RESERVED_SIZE]])


m4_define([b4_symbol(51, is_token)],
[[1]])


m4_define([b4_symbol(48, has_printer)],
[[0]])


m4_define([b4_symbol(96, has_type)],
[[1]])


m4_define([b4_symbol(67, has_printer)],
[[0]])


m4_define([b4_symbol(49, user_number)],
[[302]])


m4_define([b4_symbol(83, tag)],
[[member_func_decl]])


m4_define([b4_symbol(14, is_token)],
[[1]])


m4_define([b4_symbol(33, type)],
[[]])


m4_define([b4_symbol(86, has_printer)],
[[0]])


m4_define([b4_symbol(59, has_type)],
[[0]])


m4_define([b4_symbol(39, has_destructor)],
[[0]])


m4_define([b4_symbol(68, user_number)],
[[-1]])


m4_define([b4_symbol(99, has_destructor)],
[[0]])


m4_define([b4_symbol(15, tag)],
[[FN_RETURN]])


m4_define([b4_symbol(68, id)],
[[global_statement]])


m4_define([b4_symbol(87, user_number)],
[[-1]])


m4_define([b4_symbol(32, has_destructor)],
[[0]])


m4_define([b4_symbol(92, has_destructor)],
[[0]])


m4_define([b4_symbol(60, is_token)],
[[1]])


m4_define([b4_symbol(40, type)],
[[]])


m4_define([b4_tname],
[["$][end", "error", "$][undefined", "INTEGER", "IDENTIFIER", "STRING",
  "FLOAT", "RAND", "WHILE", "FOR", "IF", "PRINT", "PRINT_VALERIC",
  "FUNC_CALL", "FUNC_CALL_RET", "FN_RETURN", "LOCAL_VAR", "CLASS", "HAS",
  "WITH", "ARROW", "BASED_ON", "ARRAY", "TABLE", "SUPERCLASS", "DATA_TYPE",
  "STR_INPUT", "RESERVED_ADD", "RESERVED_SIZE", "MEMB_ASSIGN", "PLIB",
  "DEREF_ASSIGN", "ARRAY_ASSIGN", "ARRAY_ELEMENT", "ARRAY_LIST",
  "TABLE_LIST", "IFX", "ELSE", "PRINT_COMPLEX", "FUNC", "NEW", "GE", "LE",
  "EQ", "NE", "'>'", "'<'", "OR", "AND", "RAND2", "'+'", "'-'", "'*'",
  "'/'", "'%'", "','", "UMINUS", "NON_SEQ", "'{'", "'}'", "';'", "'('",
  "')'", "'='", "'@{'", "'@}'", "$][accept", "code", "global_statement",
  "class_name", "init_list", "init_pair", "data_member", "definition",
  "function_def", "func_name", "param_list", "param_name",
  "class_name_dec", "class_parents", "class_list", "data_list",
  "member_func", "member_func_decl", "member_func_name", "stmt",
  "stmt_list", "assignment", "var_or_member", "assignment_var_or_member",
  "memberOf", "deref", "function_call", "$][@@1", "function_call_return",
  "$][@@2", "call_func_name", "call_param_list", "complex_str", "ui_list",
  "ui", "for_rules", "dimension_list", "array_list", "$][@@3", "table_list",
  "expr", "expr_sequence", ]b4_null[]])


m4_define([b4_symbol(14, id)],
[[FUNC_CALL_RET]])


m4_define([b4_symbol(87, tag)],
[[assignment]])


m4_define([b4_symbol(23, is_token)],
[[1]])


m4_define([b4_token_table_flag],
[[0]])


m4_define([b4_pact_min],
[[-56]])


m4_define([b4_symbol(68, has_type)],
[[1]])


m4_define([b4_symbol(19, tag)],
[[WITH]])


m4_define([b4_symbol(0, tag)],
[[$][end]])


m4_define([b4_symbol(15, has_printer)],
[[0]])


m4_define([b4_symbol(60, tag)],
[[';']])


m4_define([b4_symbol(34, has_printer)],
[[0]])


m4_define([b4_symbol(54, id)],
[[]])


m4_define([b4_symbol(16, user_number)],
[[271]])


m4_define([b4_symbol(25, has_destructor)],
[[0]])


m4_define([b4_symbol(53, has_printer)],
[[0]])


m4_define([b4_symbol(85, has_destructor)],
[[0]])


m4_define([b4_symbol(32, is_token)],
[[1]])


m4_define([b4_symbol(35, user_number)],
[[290]])


m4_define([b4_symbol(72, has_printer)],
[[0]])


m4_define([b4_symbol(77, has_type)],
[[1]])


m4_define([b4_symbol(54, user_number)],
[[37]])


m4_define([b4_conflict_list_heads_max],
[[1]])


m4_define([b4_symbol(91, has_printer)],
[[0]])


m4_define([b4_merger],
[[     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0]])


m4_define([b4_symbol(104, has_type)],
[[0]])


m4_define([b4_symbol(102, tag)],
[[dimension_list]])


m4_define([b4_symbol(6, has_type)],
[[1]])


m4_define([b4_symbol(4, tag)],
[[IDENTIFIER]])


m4_define([b4_symbol(73, user_number)],
[[-1]])


m4_define([b4_symbol(64, tag)],
[['@{']])


m4_define([b4_symbol(68, type)],
[[nPtr]])


m4_define([b4_symbol(92, user_number)],
[[-1]])


m4_define([b4_symbol(94, id)],
[[function_call_return]])


m4_define([b4_symbol(41, is_token)],
[[1]])


m4_define([b4_symbol(86, has_type)],
[[1]])


m4_define([b4_symbol(40, id)],
[[NEW]])


m4_define([b4_symbol(75, type)],
[[nPtr]])


m4_define([b4_symbol(29, id)],
[[MEMB_ASSIGN]])


m4_define([b4_symbol(8, tag)],
[[WHILE]])


m4_define([b4_symbol(106, tag)],
[[expr]])


m4_define([b4_symbol(18, has_destructor)],
[[0]])


m4_define([b4_symbol(78, has_destructor)],
[[0]])


m4_define([b4_symbol(68, tag)],
[[global_statement]])


m4_define([b4_symbol(49, has_type)],
[[0]])


m4_define([b4_symbol(3, number)],
[[3]])


m4_define([b4_symbol(101, number)],
[[101]])


m4_define([b4_symbol(11, has_destructor)],
[[0]])


m4_define([b4_symbol(92, number)],
[[92]])


m4_define([b4_symbol(20, has_printer)],
[[0]])


m4_define([b4_symbol(71, has_destructor)],
[[0]])


m4_define([b4_symbol(82, number)],
[[82]])


m4_define([b4_symbol(82, type)],
[[nPtr]])


m4_define([b4_symbol(72, number)],
[[72]])


m4_define([b4_symbol(80, id)],
[[class_list]])


m4_define([b4_symbol(104, has_printer)],
[[0]])


m4_define([b4_symbol(50, is_token)],
[[1]])


m4_define([b4_symbol(6, has_printer)],
[[0]])


m4_define([b4_symbol(21, user_number)],
[[276]])


m4_define([b4_symbol(95, has_type)],
[[0]])


m4_define([b4_symbol(62, number)],
[[62]])


m4_define([b4_symbol(41, tag)],
[[GE]])


m4_define([b4_symbol(69, id)],
[[class_name]])


m4_define([b4_symbol(29, type)],
[[]])


m4_define([b4_symbol(52, number)],
[[52]])


m4_define([b4_spec_verbose_file],
[[]])


m4_define([b4_symbol(40, user_number)],
[[295]])


m4_define([b4_symbol(105, has_destructor)],
[[0]])


m4_define([b4_symbol(7, has_destructor)],
[[0]])


m4_define([b4_symbol(7, user_number)],
[[262]])


m4_define([b4_symbol(105, user_number)],
[[-1]])


m4_define([b4_symbol(42, number)],
[[42]])


m4_define([b4_symbol(13, is_token)],
[[1]])


m4_define([b4_symbol(58, has_type)],
[[0]])


m4_define([b4_symbol(32, number)],
[[32]])


m4_define([b4_symbol(15, id)],
[[FN_RETURN]])


m4_define([b4_translate_min],
[[0]])


m4_define([b4_symbol(22, number)],
[[22]])


m4_define([b4_symbol(0, has_destructor)],
[[0]])


m4_define([b4_toknum_max],
[[304]])


m4_define([b4_symbol(12, number)],
[[12]])


m4_define([b4_symbol(36, type)],
[[]])


m4_define([b4_symbol(45, tag)],
[['>']])


m4_define([b4_symbol(64, has_destructor)],
[[0]])


m4_define([b4_spec_outfile],
[[Tig.cpp]])


m4_define([b4_symbol(22, is_token)],
[[1]])


m4_define([b4_symbol(67, has_type)],
[[0]])


m4_define([b4_symbol(55, id)],
[[]])


m4_define([b4_percent_define_loc(lr.keep-unreachable-state)],
[[[[<default value>:-1.-1]], [[<default value>:-1.-1]]]])


m4_define([b4_symbol(43, type)],
[[]])


m4_define([b4_conflicting_rules_min],
[[0]])


m4_define([b4_symbol(6, has_id)],
[[1]])


m4_define([b4_symbol(104, has_id)],
[[0]])


m4_define([b4_symbol(49, tag)],
[[RAND2]])


m4_define([b4_symbol(95, has_id)],
[[0]])


m4_define([b4_symbol(85, has_id)],
[[1]])


m4_define([b4_symbol(75, has_id)],
[[1]])


m4_define([b4_symbol(50, type)],
[[]])


m4_define([b4_table_max],
[[212]])


m4_define([b4_symbol(95, id)],
[[]])


m4_define([b4_symbol(90, tag)],
[[memberOf]])


m4_define([b4_symbol(31, is_token)],
[[1]])


m4_define([b4_symbol(65, has_id)],
[[0]])


m4_define([b4_symbol(76, has_type)],
[[1]])


m4_define([b4_symbol(57, has_destructor)],
[[0]])


m4_define([b4_symbol(55, has_id)],
[[0]])


m4_define([b4_symbol(22, tag)],
[[ARRAY]])


m4_define([b4_symbol(45, has_id)],
[[0]])


m4_define([b4_symbol(5, has_type)],
[[1]])


m4_define([b4_symbol(103, has_type)],
[[1]])


m4_define([b4_symbol(41, id)],
[[GE]])


m4_define([b4_symbol(35, has_id)],
[[1]])


m4_define([b4_symbol(19, has_printer)],
[[0]])


m4_define([b4_symbol(39, has_type)],
[[0]])


m4_define([b4_symbol(50, has_destructor)],
[[0]])


m4_define([b4_symbol(25, has_id)],
[[1]])


m4_define([b4_symbol(38, has_printer)],
[[0]])


m4_define([b4_symbol(15, has_id)],
[[1]])


m4_define([b4_symbol(57, has_printer)],
[[0]])


m4_define([b4_symbol(94, tag)],
[[function_call_return]])


m4_define([b4_symbol(0, type)],
[[]])


m4_define([b4_symbol(40, is_token)],
[[1]])


m4_define([b4_conflicting_rules],
[[     0,    63,     0]])


m4_define([b4_symbol(85, has_type)],
[[1]])


m4_define([b4_symbol(39, user_number)],
[[294]])


m4_define([b4_symbol(76, has_printer)],
[[0]])


m4_define([b4_symbol(26, tag)],
[[STR_INPUT]])


m4_define([b4_symbol(58, user_number)],
[[123]])


m4_define([b4_symbol(81, id)],
[[data_list]])


m4_define([b4_symbol(95, has_printer)],
[[0]])


m4_define([b4_percent_define_syncline(parse.error)],
[[]b4_syncline(85, [["Tig.y"]])[]])


m4_define([b4_symbol(11, type)],
[[]])


m4_define([b4_symbol(99, number)],
[[99]])


m4_define([b4_symbol(77, user_number)],
[[-1]])


m4_define([b4_symbol(48, has_type)],
[[0]])


m4_define([b4_symbol(78, type)],
[[nPtr]])


m4_define([b4_symbol(89, number)],
[[89]])


m4_define([b4_symbol(96, user_number)],
[[-1]])


m4_define([b4_symbol(79, number)],
[[79]])


m4_define([b4_dir_prefix],
[[]])


m4_define([b4_symbol(98, tag)],
[[complex_str]])


m4_define([b4_symbol(16, id)],
[[LOCAL_VAR]])


m4_define([b4_symbol(43, has_destructor)],
[[0]])


m4_define([b4_symbol(69, number)],
[[69]])


m4_define([b4_symbol(59, number)],
[[59]])


m4_define([b4_symbol(94, has_type)],
[[1]])


m4_define([b4_symbol(49, number)],
[[49]])


m4_define([b4_symbol(39, number)],
[[39]])


m4_define([b4_symbol(85, type)],
[[nPtr]])


m4_define([b4_symbol(12, is_token)],
[[1]])


m4_define([b4_symbol(0, id)],
[[]])


m4_define([b4_symbol(29, number)],
[[29]])


m4_define([b4_symbol(57, has_type)],
[[0]])


m4_define([b4_symbol(71, tag)],
[[init_pair]])


m4_define([b4_symbol(19, number)],
[[19]])


m4_define([b4_immediate_max],
[[0]])


m4_define([b4_symbol(24, has_printer)],
[[0]])


m4_define([b4_symbol(56, id)],
[[UMINUS]])


m4_define([b4_symbol(43, has_printer)],
[[0]])


m4_define([b4_symbol(92, type)],
[[nPtr]])


m4_define([b4_symbol(25, user_number)],
[[280]])


m4_define([b4_symbol(62, has_printer)],
[[0]])


m4_define([b4_symbol(39, type)],
[[]])


m4_define([b4_symbol(44, user_number)],
[[299]])


m4_define([b4_symbol(36, has_destructor)],
[[0]])


m4_define([b4_symbol(81, has_printer)],
[[0]])


m4_define([b4_symbol(96, has_destructor)],
[[0]])


m4_define([b4_symbol(21, is_token)],
[[1]])


m4_define([b4_symbol(66, has_type)],
[[0]])


m4_define([b4_symbol(75, tag)],
[[func_name]])


m4_define([b4_defgoto_min],
[[-1]])


m4_define([b4_symbol(63, user_number)],
[[61]])


m4_define([b4_percent_define(parse.error)],
[[verbose]])


m4_define([b4_symbol(82, user_number)],
[[-1]])


m4_define([b4_symbol(96, id)],
[[call_func_name]])


m4_define([b4_symbol(29, has_type)],
[[0]])


m4_define([b4_symbol(46, type)],
[[]])


m4_define([b4_symbol(42, id)],
[[LE]])


