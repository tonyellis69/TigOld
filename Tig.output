Terminals unused in grammar

   PRINT_VALERIC
   FUNC_CALL
   FUNC_CALL_RET
   LOCAL_VAR
   WITH
   ARRAY
   TABLE
   RESERVED_ADD
   RESERVED_SIZE
   MEMB_ASSIGN
   PLIB
   DEREF_ASSIGN
   ARRAY_ASSIGN
   ARRAY_ELEMENT
   ARRAY_LIST
   TABLE_LIST
   FUNC
   PRINT_COMPLEX


State 4 conflicts: 1 reduce/reduce


Grammar

    0 $accept: code $end

    1 code: code definition
    2     | code global_statement
    3     | /* empty */

    4 global_statement: class_name IDENTIFIER ';'
    5                 | class_name IDENTIFIER '(' init_list ')' ';'
    6                 | stmt

    7 class_name: IDENTIFIER

    8 init_list: init_pair
    9          | init_list ',' init_pair

   10 init_pair: data_member expr

   11 data_member: IDENTIFIER

   12 definition: function_def '{' stmt_list '}'
   13           | CLASS class_name_dec HAS data_list ';'
   14           | CLASS class_name_dec class_parents HAS data_list ';'

   15 function_def: func_name '(' param_list ')'
   16             | func_name '(' ')'

   17 func_name: IDENTIFIER

   18 param_list: param_name
   19           | param_list ',' param_name

   20 param_name: IDENTIFIER

   21 class_name_dec: IDENTIFIER

   22 class_parents: BASED_ON class_list

   23 class_list: IDENTIFIER
   24           | class_list ',' IDENTIFIER

   25 data_list: IDENTIFIER
   26          | data_list ',' IDENTIFIER
   27          | member_func
   28          | data_list ',' member_func

   29 member_func: member_func_decl '{' stmt_list '}'
   30            | member_func_decl '{' '}'

   31 member_func_decl: member_func_name '(' param_list ')'
   32                 | member_func_name '(' ')'

   33 member_func_name: IDENTIFIER

   34 stmt: ';'
   35     | '{' stmt_list '}'
   36     | assignment ';'
   37     | PRINT expr ';'
   38     | PRINT complex_str ';'
   39     | WHILE '(' expr ')' stmt
   40     | FOR '(' for_rules ')' stmt
   41     | IF '(' expr ')' stmt
   42     | IF '(' expr ')' stmt ELSE stmt
   43     | function_call ';'
   44     | FN_RETURN ';'
   45     | FN_RETURN expr ';'
   46     | error ';'

   47 stmt_list: stmt
   48          | stmt_list stmt

   49 assignment: assignment_var_or_member '=' expr

   50 var_or_member: IDENTIFIER
   51              | IDENTIFIER memberOf
   52              | IDENTIFIER dimension_list

   53 assignment_var_or_member: IDENTIFIER
   54                         | deref ARROW IDENTIFIER
   55                         | deref dimension_list

   56 memberOf: ARROW IDENTIFIER
   57         | memberOf ARROW IDENTIFIER

   58 deref: IDENTIFIER
   59      | deref ARROW IDENTIFIER
   60      | deref dimension_list

   61 $@1: /* empty */

   62 function_call: call_func_name '(' $@1 call_param_list ')'

   63 $@2: /* empty */

   64 function_call_return: call_func_name '(' $@2 call_param_list ')'

   65 call_func_name: IDENTIFIER
   66               | SUPERCLASS IDENTIFIER
   67               | deref ARROW IDENTIFIER
   68               | IDENTIFIER SUPERCLASS IDENTIFIER

   69 call_param_list: expr_sequence
   70                | /* empty */

   71 complex_str: ui_list STRING

   72 ui_list: ui
   73        | ui_list ui

   74 ui: STRING '[' expr ']'

   75 for_rules: assignment ';' expr ';' assignment

   76 dimension_list: '[' expr ']'
   77               | '[' expr ',' expr ']'

   78 $@3: /* empty */

   79 array_list: '{' $@3 expr_sequence '}'

   80 table_list: array_list
   81           | table_list ',' array_list

   82 expr: INTEGER
   83     | STRING
   84     | FLOAT
   85     | IDENTIFIER
   86     | function_call_return
   87     | NEW IDENTIFIER
   88     | NEW class_name '(' init_list ')'
   89     | deref ARROW IDENTIFIER
   90     | '-' expr
   91     | expr '+' expr
   92     | expr '-' expr
   93     | expr '*' expr
   94     | expr '/' expr
   95     | expr '%' expr
   96     | expr '<' expr
   97     | expr '>' expr
   98     | expr AND expr
   99     | expr OR expr
  100     | expr GE expr
  101     | expr LE expr
  102     | expr NE expr
  103     | expr EQ expr
  104     | '(' expr ')'
  105     | DATA_TYPE var_or_member
  106     | STR_INPUT
  107     | array_list
  108     | '[' table_list ']'
  109     | deref dimension_list
  110     | RAND
  111     | expr RAND2 expr

  112 expr_sequence: expr
  113              | expr_sequence ',' expr


Terminals, with rules where they appear

$end (0) 0
'%' (37) 95
'(' (40) 5 15 16 31 32 39 40 41 42 62 64 88 104
')' (41) 5 15 16 31 32 39 40 41 42 62 64 88 104
'*' (42) 93
'+' (43) 91
',' (44) 9 19 24 26 28 77 81 113
'-' (45) 90 92
'/' (47) 94
';' (59) 4 5 13 14 34 36 37 38 43 44 45 46 75
'<' (60) 96
'=' (61) 49
'>' (62) 97
'[' (91) 74 76 77 108
']' (93) 74 76 77 108
'{' (123) 12 29 30 35 79
'}' (125) 12 29 30 35 79
error (256) 46
INTEGER (258) 82
IDENTIFIER (259) 4 5 7 11 17 20 21 23 24 25 26 33 50 51 52 53 54 56
    57 58 59 65 66 67 68 85 87 89
STRING (260) 71 74 83
FLOAT (261) 84
RAND (262) 110
WHILE (263) 39
FOR (264) 40
IF (265) 41 42
PRINT (266) 37 38
PRINT_VALERIC (267)
FUNC_CALL (268)
FUNC_CALL_RET (269)
FN_RETURN (270) 44 45
LOCAL_VAR (271)
CLASS (272) 13 14
HAS (273) 13 14
WITH (274)
ARROW (275) 54 56 57 59 67 89
BASED_ON (276) 22
ARRAY (277)
TABLE (278)
SUPERCLASS (279) 66 68
DATA_TYPE (280) 105
STR_INPUT (281) 106
RESERVED_ADD (282)
RESERVED_SIZE (283)
MEMB_ASSIGN (284)
PLIB (285)
DEREF_ASSIGN (286)
ARRAY_ASSIGN (287)
ARRAY_ELEMENT (288)
ARRAY_LIST (289)
TABLE_LIST (290)
IFX (291)
NEW (292) 87 88
FUNC (293)
PRINT_COMPLEX (294)
ELSE (295) 42
RAND2 (296) 111
AND (297) 98
OR (298) 99
NE (299) 102
EQ (300) 103
LE (301) 101
GE (302) 100
UMINUS (303)
NON_SEQ (304)


Nonterminals, with rules where they appear

$accept (66)
    on left: 0
code (67)
    on left: 1 2 3, on right: 0 1 2
global_statement (68)
    on left: 4 5 6, on right: 2
class_name (69)
    on left: 7, on right: 4 5 88
init_list (70)
    on left: 8 9, on right: 5 9 88
init_pair (71)
    on left: 10, on right: 8 9
data_member (72)
    on left: 11, on right: 10
definition (73)
    on left: 12 13 14, on right: 1
function_def (74)
    on left: 15 16, on right: 12
func_name (75)
    on left: 17, on right: 15 16
param_list (76)
    on left: 18 19, on right: 15 19 31
param_name (77)
    on left: 20, on right: 18 19
class_name_dec (78)
    on left: 21, on right: 13 14
class_parents (79)
    on left: 22, on right: 14
class_list (80)
    on left: 23 24, on right: 22 24
data_list (81)
    on left: 25 26 27 28, on right: 13 14 26 28
member_func (82)
    on left: 29 30, on right: 27 28
member_func_decl (83)
    on left: 31 32, on right: 29 30
member_func_name (84)
    on left: 33, on right: 31 32
stmt (85)
    on left: 34 35 36 37 38 39 40 41 42 43 44 45 46, on right: 6 39
    40 41 42 47 48
stmt_list (86)
    on left: 47 48, on right: 12 29 35 48
assignment (87)
    on left: 49, on right: 36 75
var_or_member (88)
    on left: 50 51 52, on right: 105
assignment_var_or_member (89)
    on left: 53 54 55, on right: 49
memberOf (90)
    on left: 56 57, on right: 51 57
deref (91)
    on left: 58 59 60, on right: 54 55 59 60 67 89 109
function_call (92)
    on left: 62, on right: 43
$@1 (93)
    on left: 61, on right: 62
function_call_return (94)
    on left: 64, on right: 86
$@2 (95)
    on left: 63, on right: 64
call_func_name (96)
    on left: 65 66 67 68, on right: 62 64
call_param_list (97)
    on left: 69 70, on right: 62 64
complex_str (98)
    on left: 71, on right: 38
ui_list (99)
    on left: 72 73, on right: 71 73
ui (100)
    on left: 74, on right: 72 73
for_rules (101)
    on left: 75, on right: 40
dimension_list (102)
    on left: 76 77, on right: 52 55 60 109
array_list (103)
    on left: 79, on right: 80 81 107
$@3 (104)
    on left: 78, on right: 79
table_list (105)
    on left: 80 81, on right: 81 108
expr (106)
    on left: 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99
    100 101 102 103 104 105 106 107 108 109 110 111, on right: 10 37
    39 41 42 45 49 74 75 76 77 90 91 92 93 94 95 96 97 98 99 100 101
    102 103 104 111 112 113
expr_sequence (107)
    on left: 112 113, on right: 69 79 113


state 0

    0 $accept: . code $end

    $default  reduce using rule 3 (code)

    code  go to state 1


state 1

    0 $accept: code . $end
    1 code: code . definition
    2     | code . global_statement

    $end        shift, and go to state 2
    error       shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    IF          shift, and go to state 7
    PRINT       shift, and go to state 8
    FN_RETURN   shift, and go to state 9
    CLASS       shift, and go to state 10
    SUPERCLASS  shift, and go to state 11
    ';'         shift, and go to state 12
    '{'         shift, and go to state 13

    global_statement          go to state 14
    class_name                go to state 15
    definition                go to state 16
    function_def              go to state 17
    func_name                 go to state 18
    stmt                      go to state 19
    assignment                go to state 20
    assignment_var_or_member  go to state 21
    deref                     go to state 22
    function_call             go to state 23
    call_func_name            go to state 24


state 2

    0 $accept: code $end .

    $default  accept


state 3

   46 stmt: error . ';'

    ';'  shift, and go to state 25


state 4

    7 class_name: IDENTIFIER .
   17 func_name: IDENTIFIER .
   53 assignment_var_or_member: IDENTIFIER .
   58 deref: IDENTIFIER .
   65 call_func_name: IDENTIFIER .
   68               | IDENTIFIER . SUPERCLASS IDENTIFIER

    SUPERCLASS  shift, and go to state 26

    IDENTIFIER  reduce using rule 7 (class_name)
    '('         reduce using rule 17 (func_name)
    '('         [reduce using rule 65 (call_func_name)]
    '='         reduce using rule 53 (assignment_var_or_member)
    $default    reduce using rule 58 (deref)


state 5

   39 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 27


state 6

   40 stmt: FOR . '(' for_rules ')' stmt

    '('  shift, and go to state 28


state 7

   41 stmt: IF . '(' expr ')' stmt
   42     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 29


state 8

   37 stmt: PRINT . expr ';'
   38     | PRINT . complex_str ';'

    INTEGER     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    STRING      shift, and go to state 32
    FLOAT       shift, and go to state 33
    RAND        shift, and go to state 34
    SUPERCLASS  shift, and go to state 11
    DATA_TYPE   shift, and go to state 35
    STR_INPUT   shift, and go to state 36
    NEW         shift, and go to state 37
    '-'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40
    '['         shift, and go to state 41

    deref                 go to state 42
    function_call_return  go to state 43
    call_func_name        go to state 44
    complex_str           go to state 45
    ui_list               go to state 46
    ui                    go to state 47
    array_list            go to state 48
    expr                  go to state 49


state 9

   44 stmt: FN_RETURN . ';'
   45     | FN_RETURN . expr ';'

    INTEGER     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    STRING      shift, and go to state 50
    FLOAT       shift, and go to state 33
    RAND        shift, and go to state 34
    SUPERCLASS  shift, and go to state 11
    DATA_TYPE   shift, and go to state 35
    STR_INPUT   shift, and go to state 36
    NEW         shift, and go to state 37
    '-'         shift, and go to state 38
    ';'         shift, and go to state 51
    '('         shift, and go to state 39
    '{'         shift, and go to state 40
    '['         shift, and go to state 41

    deref                 go to state 42
    function_call_return  go to state 43
    call_func_name        go to state 44
    array_list            go to state 48
    expr                  go to state 52


state 10

   13 definition: CLASS . class_name_dec HAS data_list ';'
   14           | CLASS . class_name_dec class_parents HAS data_list ';'

    IDENTIFIER  shift, and go to state 53

    class_name_dec  go to state 54


state 11

   66 call_func_name: SUPERCLASS . IDENTIFIER

    IDENTIFIER  shift, and go to state 55


state 12

   34 stmt: ';' .

    $default  reduce using rule 34 (stmt)


state 13

   35 stmt: '{' . stmt_list '}'

    error       shift, and go to state 3
    IDENTIFIER  shift, and go to state 56
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    IF          shift, and go to state 7
    PRINT       shift, and go to state 8
    FN_RETURN   shift, and go to state 9
    SUPERCLASS  shift, and go to state 11
    ';'         shift, and go to state 12
    '{'         shift, and go to state 13

    stmt                      go to state 57
    stmt_list                 go to state 58
    assignment                go to state 20
    assignment_var_or_member  go to state 21
    deref                     go to state 22
    function_call             go to state 23
    call_func_name            go to state 24


state 14

    2 code: code global_statement .

    $default  reduce using rule 2 (code)


state 15

    4 global_statement: class_name . IDENTIFIER ';'
    5                 | class_name . IDENTIFIER '(' init_list ')' ';'

    IDENTIFIER  shift, and go to state 59


state 16

    1 code: code definition .

    $default  reduce using rule 1 (code)


state 17

   12 definition: function_def . '{' stmt_list '}'

    '{'  shift, and go to state 60


state 18

   15 function_def: func_name . '(' param_list ')'
   16             | func_name . '(' ')'

    '('  shift, and go to state 61


state 19

    6 global_statement: stmt .

    $default  reduce using rule 6 (global_statement)


state 20

   36 stmt: assignment . ';'

    ';'  shift, and go to state 62


state 21

   49 assignment: assignment_var_or_member . '=' expr

    '='  shift, and go to state 63


state 22

   54 assignment_var_or_member: deref . ARROW IDENTIFIER
   55                         | deref . dimension_list
   59 deref: deref . ARROW IDENTIFIER
   60      | deref . dimension_list
   67 call_func_name: deref . ARROW IDENTIFIER

    ARROW  shift, and go to state 64
    '['    shift, and go to state 65

    dimension_list  go to state 66


state 23

   43 stmt: function_call . ';'

    ';'  shift, and go to state 67


state 24

   62 function_call: call_func_name . '(' $@1 call_param_list ')'

    '('  shift, and go to state 68


state 25

   46 stmt: error ';' .

    $default  reduce using rule 46 (stmt)


state 26

   68 call_func_name: IDENTIFIER SUPERCLASS . IDENTIFIER

    IDENTIFIER  shift, and go to state 69


state 27

   39 stmt: WHILE '(' . expr ')' stmt

    INTEGER     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    STRING      shift, and go to state 50
    FLOAT       shift, and go to state 33
    RAND        shift, and go to state 34
    SUPERCLASS  shift, and go to state 11
    DATA_TYPE   shift, and go to state 35
    STR_INPUT   shift, and go to state 36
    NEW         shift, and go to state 37
    '-'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40
    '['         shift, and go to state 41

    deref                 go to state 42
    function_call_return  go to state 43
    call_func_name        go to state 44
    array_list            go to state 48
    expr                  go to state 70


state 28

   40 stmt: FOR '(' . for_rules ')' stmt

    IDENTIFIER  shift, and go to state 71

    assignment                go to state 72
    assignment_var_or_member  go to state 21
    deref                     go to state 73
    for_rules                 go to state 74


state 29

   41 stmt: IF '(' . expr ')' stmt
   42     | IF '(' . expr ')' stmt ELSE stmt

    INTEGER     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    STRING      shift, and go to state 50
    FLOAT       shift, and go to state 33
    RAND        shift, and go to state 34
    SUPERCLASS  shift, and go to state 11
    DATA_TYPE   shift, and go to state 35
    STR_INPUT   shift, and go to state 36
    NEW         shift, and go to state 37
    '-'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40
    '['         shift, and go to state 41

    deref                 go to state 42
    function_call_return  go to state 43
    call_func_name        go to state 44
    array_list            go to state 48
    expr                  go to state 75


state 30

   82 expr: INTEGER .

    $default  reduce using rule 82 (expr)


state 31

   58 deref: IDENTIFIER .
   65 call_func_name: IDENTIFIER .
   68               | IDENTIFIER . SUPERCLASS IDENTIFIER
   85 expr: IDENTIFIER .

    SUPERCLASS  shift, and go to state 26

    ARROW     reduce using rule 58 (deref)
    '('       reduce using rule 65 (call_func_name)
    '['       reduce using rule 58 (deref)
    $default  reduce using rule 85 (expr)


state 32

   74 ui: STRING . '[' expr ']'
   83 expr: STRING .

    '['  shift, and go to state 76

    $default  reduce using rule 83 (expr)


state 33

   84 expr: FLOAT .

    $default  reduce using rule 84 (expr)


state 34

  110 expr: RAND .

    $default  reduce using rule 110 (expr)


state 35

  105 expr: DATA_TYPE . var_or_member

    IDENTIFIER  shift, and go to state 77

    var_or_member  go to state 78


state 36

  106 expr: STR_INPUT .

    $default  reduce using rule 106 (expr)


state 37

   87 expr: NEW . IDENTIFIER
   88     | NEW . class_name '(' init_list ')'

    IDENTIFIER  shift, and go to state 79

    class_name  go to state 80


state 38

   90 expr: '-' . expr

    INTEGER     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    STRING      shift, and go to state 50
    FLOAT       shift, and go to state 33
    RAND        shift, and go to state 34
    SUPERCLASS  shift, and go to state 11
    DATA_TYPE   shift, and go to state 35
    STR_INPUT   shift, and go to state 36
    NEW         shift, and go to state 37
    '-'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40
    '['         shift, and go to state 41

    deref                 go to state 42
    function_call_return  go to state 43
    call_func_name        go to state 44
    array_list            go to state 48
    expr                  go to state 81


state 39

  104 expr: '(' . expr ')'

    INTEGER     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    STRING      shift, and go to state 50
    FLOAT       shift, and go to state 33
    RAND        shift, and go to state 34
    SUPERCLASS  shift, and go to state 11
    DATA_TYPE   shift, and go to state 35
    STR_INPUT   shift, and go to state 36
    NEW         shift, and go to state 37
    '-'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40
    '['         shift, and go to state 41

    deref                 go to state 42
    function_call_return  go to state 43
    call_func_name        go to state 44
    array_list            go to state 48
    expr                  go to state 82


state 40

   79 array_list: '{' . $@3 expr_sequence '}'

    $default  reduce using rule 78 ($@3)

    $@3  go to state 83


state 41

  108 expr: '[' . table_list ']'

    '{'  shift, and go to state 40

    array_list  go to state 84
    table_list  go to state 85


state 42

   59 deref: deref . ARROW IDENTIFIER
   60      | deref . dimension_list
   67 call_func_name: deref . ARROW IDENTIFIER
   89 expr: deref . ARROW IDENTIFIER
  109     | deref . dimension_list

    ARROW  shift, and go to state 86
    '['    shift, and go to state 65

    dimension_list  go to state 87


state 43

   86 expr: function_call_return .

    $default  reduce using rule 86 (expr)


state 44

   64 function_call_return: call_func_name . '(' $@2 call_param_list ')'

    '('  shift, and go to state 88


state 45

   38 stmt: PRINT complex_str . ';'

    ';'  shift, and go to state 89


state 46

   71 complex_str: ui_list . STRING
   73 ui_list: ui_list . ui

    STRING  shift, and go to state 90

    ui  go to state 91


state 47

   72 ui_list: ui .

    $default  reduce using rule 72 (ui_list)


state 48

  107 expr: array_list .

    $default  reduce using rule 107 (expr)


state 49

   37 stmt: PRINT expr . ';'
   91 expr: expr . '+' expr
   92     | expr . '-' expr
   93     | expr . '*' expr
   94     | expr . '/' expr
   95     | expr . '%' expr
   96     | expr . '<' expr
   97     | expr . '>' expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . GE expr
  101     | expr . LE expr
  102     | expr . NE expr
  103     | expr . EQ expr
  111     | expr . RAND2 expr

    '>'    shift, and go to state 92
    '<'    shift, and go to state 93
    RAND2  shift, and go to state 94
    AND    shift, and go to state 95
    OR     shift, and go to state 96
    NE     shift, and go to state 97
    EQ     shift, and go to state 98
    LE     shift, and go to state 99
    GE     shift, and go to state 100
    '+'    shift, and go to state 101
    '-'    shift, and go to state 102
    '*'    shift, and go to state 103
    '/'    shift, and go to state 104
    '%'    shift, and go to state 105
    ';'    shift, and go to state 106


state 50

   83 expr: STRING .

    $default  reduce using rule 83 (expr)


state 51

   44 stmt: FN_RETURN ';' .

    $default  reduce using rule 44 (stmt)


state 52

   45 stmt: FN_RETURN expr . ';'
   91 expr: expr . '+' expr
   92     | expr . '-' expr
   93     | expr . '*' expr
   94     | expr . '/' expr
   95     | expr . '%' expr
   96     | expr . '<' expr
   97     | expr . '>' expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . GE expr
  101     | expr . LE expr
  102     | expr . NE expr
  103     | expr . EQ expr
  111     | expr . RAND2 expr

    '>'    shift, and go to state 92
    '<'    shift, and go to state 93
    RAND2  shift, and go to state 94
    AND    shift, and go to state 95
    OR     shift, and go to state 96
    NE     shift, and go to state 97
    EQ     shift, and go to state 98
    LE     shift, and go to state 99
    GE     shift, and go to state 100
    '+'    shift, and go to state 101
    '-'    shift, and go to state 102
    '*'    shift, and go to state 103
    '/'    shift, and go to state 104
    '%'    shift, and go to state 105
    ';'    shift, and go to state 107


state 53

   21 class_name_dec: IDENTIFIER .

    $default  reduce using rule 21 (class_name_dec)


state 54

   13 definition: CLASS class_name_dec . HAS data_list ';'
   14           | CLASS class_name_dec . class_parents HAS data_list ';'

    HAS       shift, and go to state 108
    BASED_ON  shift, and go to state 109

    class_parents  go to state 110


state 55

   66 call_func_name: SUPERCLASS IDENTIFIER .

    $default  reduce using rule 66 (call_func_name)


state 56

   53 assignment_var_or_member: IDENTIFIER .
   58 deref: IDENTIFIER .
   65 call_func_name: IDENTIFIER .
   68               | IDENTIFIER . SUPERCLASS IDENTIFIER

    SUPERCLASS  shift, and go to state 26

    '('       reduce using rule 65 (call_func_name)
    '='       reduce using rule 53 (assignment_var_or_member)
    $default  reduce using rule 58 (deref)


state 57

   47 stmt_list: stmt .

    $default  reduce using rule 47 (stmt_list)


state 58

   35 stmt: '{' stmt_list . '}'
   48 stmt_list: stmt_list . stmt

    error       shift, and go to state 3
    IDENTIFIER  shift, and go to state 56
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    IF          shift, and go to state 7
    PRINT       shift, and go to state 8
    FN_RETURN   shift, and go to state 9
    SUPERCLASS  shift, and go to state 11
    ';'         shift, and go to state 12
    '{'         shift, and go to state 13
    '}'         shift, and go to state 111

    stmt                      go to state 112
    assignment                go to state 20
    assignment_var_or_member  go to state 21
    deref                     go to state 22
    function_call             go to state 23
    call_func_name            go to state 24


state 59

    4 global_statement: class_name IDENTIFIER . ';'
    5                 | class_name IDENTIFIER . '(' init_list ')' ';'

    ';'  shift, and go to state 113
    '('  shift, and go to state 114


state 60

   12 definition: function_def '{' . stmt_list '}'

    error       shift, and go to state 3
    IDENTIFIER  shift, and go to state 56
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    IF          shift, and go to state 7
    PRINT       shift, and go to state 8
    FN_RETURN   shift, and go to state 9
    SUPERCLASS  shift, and go to state 11
    ';'         shift, and go to state 12
    '{'         shift, and go to state 13

    stmt                      go to state 57
    stmt_list                 go to state 115
    assignment                go to state 20
    assignment_var_or_member  go to state 21
    deref                     go to state 22
    function_call             go to state 23
    call_func_name            go to state 24


state 61

   15 function_def: func_name '(' . param_list ')'
   16             | func_name '(' . ')'

    IDENTIFIER  shift, and go to state 116
    ')'         shift, and go to state 117

    param_list  go to state 118
    param_name  go to state 119


state 62

   36 stmt: assignment ';' .

    $default  reduce using rule 36 (stmt)


state 63

   49 assignment: assignment_var_or_member '=' . expr

    INTEGER     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    STRING      shift, and go to state 50
    FLOAT       shift, and go to state 33
    RAND        shift, and go to state 34
    SUPERCLASS  shift, and go to state 11
    DATA_TYPE   shift, and go to state 35
    STR_INPUT   shift, and go to state 36
    NEW         shift, and go to state 37
    '-'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40
    '['         shift, and go to state 41

    deref                 go to state 42
    function_call_return  go to state 43
    call_func_name        go to state 44
    array_list            go to state 48
    expr                  go to state 120


state 64

   54 assignment_var_or_member: deref ARROW . IDENTIFIER
   59 deref: deref ARROW . IDENTIFIER
   67 call_func_name: deref ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 121


state 65

   76 dimension_list: '[' . expr ']'
   77               | '[' . expr ',' expr ']'

    INTEGER     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    STRING      shift, and go to state 50
    FLOAT       shift, and go to state 33
    RAND        shift, and go to state 34
    SUPERCLASS  shift, and go to state 11
    DATA_TYPE   shift, and go to state 35
    STR_INPUT   shift, and go to state 36
    NEW         shift, and go to state 37
    '-'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40
    '['         shift, and go to state 41

    deref                 go to state 42
    function_call_return  go to state 43
    call_func_name        go to state 44
    array_list            go to state 48
    expr                  go to state 122


state 66

   55 assignment_var_or_member: deref dimension_list .
   60 deref: deref dimension_list .

    '='       reduce using rule 55 (assignment_var_or_member)
    $default  reduce using rule 60 (deref)


state 67

   43 stmt: function_call ';' .

    $default  reduce using rule 43 (stmt)


state 68

   62 function_call: call_func_name '(' . $@1 call_param_list ')'

    $default  reduce using rule 61 ($@1)

    $@1  go to state 123


state 69

   68 call_func_name: IDENTIFIER SUPERCLASS IDENTIFIER .

    $default  reduce using rule 68 (call_func_name)


state 70

   39 stmt: WHILE '(' expr . ')' stmt
   91 expr: expr . '+' expr
   92     | expr . '-' expr
   93     | expr . '*' expr
   94     | expr . '/' expr
   95     | expr . '%' expr
   96     | expr . '<' expr
   97     | expr . '>' expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . GE expr
  101     | expr . LE expr
  102     | expr . NE expr
  103     | expr . EQ expr
  111     | expr . RAND2 expr

    '>'    shift, and go to state 92
    '<'    shift, and go to state 93
    RAND2  shift, and go to state 94
    AND    shift, and go to state 95
    OR     shift, and go to state 96
    NE     shift, and go to state 97
    EQ     shift, and go to state 98
    LE     shift, and go to state 99
    GE     shift, and go to state 100
    '+'    shift, and go to state 101
    '-'    shift, and go to state 102
    '*'    shift, and go to state 103
    '/'    shift, and go to state 104
    '%'    shift, and go to state 105
    ')'    shift, and go to state 124


state 71

   53 assignment_var_or_member: IDENTIFIER .
   58 deref: IDENTIFIER .

    '='       reduce using rule 53 (assignment_var_or_member)
    $default  reduce using rule 58 (deref)


state 72

   75 for_rules: assignment . ';' expr ';' assignment

    ';'  shift, and go to state 125


state 73

   54 assignment_var_or_member: deref . ARROW IDENTIFIER
   55                         | deref . dimension_list
   59 deref: deref . ARROW IDENTIFIER
   60      | deref . dimension_list

    ARROW  shift, and go to state 126
    '['    shift, and go to state 65

    dimension_list  go to state 66


state 74

   40 stmt: FOR '(' for_rules . ')' stmt

    ')'  shift, and go to state 127


state 75

   41 stmt: IF '(' expr . ')' stmt
   42     | IF '(' expr . ')' stmt ELSE stmt
   91 expr: expr . '+' expr
   92     | expr . '-' expr
   93     | expr . '*' expr
   94     | expr . '/' expr
   95     | expr . '%' expr
   96     | expr . '<' expr
   97     | expr . '>' expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . GE expr
  101     | expr . LE expr
  102     | expr . NE expr
  103     | expr . EQ expr
  111     | expr . RAND2 expr

    '>'    shift, and go to state 92
    '<'    shift, and go to state 93
    RAND2  shift, and go to state 94
    AND    shift, and go to state 95
    OR     shift, and go to state 96
    NE     shift, and go to state 97
    EQ     shift, and go to state 98
    LE     shift, and go to state 99
    GE     shift, and go to state 100
    '+'    shift, and go to state 101
    '-'    shift, and go to state 102
    '*'    shift, and go to state 103
    '/'    shift, and go to state 104
    '%'    shift, and go to state 105
    ')'    shift, and go to state 128


state 76

   74 ui: STRING '[' . expr ']'

    INTEGER     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    STRING      shift, and go to state 50
    FLOAT       shift, and go to state 33
    RAND        shift, and go to state 34
    SUPERCLASS  shift, and go to state 11
    DATA_TYPE   shift, and go to state 35
    STR_INPUT   shift, and go to state 36
    NEW         shift, and go to state 37
    '-'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40
    '['         shift, and go to state 41

    deref                 go to state 42
    function_call_return  go to state 43
    call_func_name        go to state 44
    array_list            go to state 48
    expr                  go to state 129


state 77

   50 var_or_member: IDENTIFIER .
   51              | IDENTIFIER . memberOf
   52              | IDENTIFIER . dimension_list

    ARROW  shift, and go to state 130
    '['    shift, and go to state 65

    $default  reduce using rule 50 (var_or_member)

    memberOf        go to state 131
    dimension_list  go to state 132


state 78

  105 expr: DATA_TYPE var_or_member .

    $default  reduce using rule 105 (expr)


state 79

    7 class_name: IDENTIFIER .
   87 expr: NEW IDENTIFIER .

    '('       reduce using rule 7 (class_name)
    $default  reduce using rule 87 (expr)


state 80

   88 expr: NEW class_name . '(' init_list ')'

    '('  shift, and go to state 133


state 81

   90 expr: '-' expr .
   91     | expr . '+' expr
   92     | expr . '-' expr
   93     | expr . '*' expr
   94     | expr . '/' expr
   95     | expr . '%' expr
   96     | expr . '<' expr
   97     | expr . '>' expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . GE expr
  101     | expr . LE expr
  102     | expr . NE expr
  103     | expr . EQ expr
  111     | expr . RAND2 expr

    $default  reduce using rule 90 (expr)


state 82

   91 expr: expr . '+' expr
   92     | expr . '-' expr
   93     | expr . '*' expr
   94     | expr . '/' expr
   95     | expr . '%' expr
   96     | expr . '<' expr
   97     | expr . '>' expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . GE expr
  101     | expr . LE expr
  102     | expr . NE expr
  103     | expr . EQ expr
  104     | '(' expr . ')'
  111     | expr . RAND2 expr

    '>'    shift, and go to state 92
    '<'    shift, and go to state 93
    RAND2  shift, and go to state 94
    AND    shift, and go to state 95
    OR     shift, and go to state 96
    NE     shift, and go to state 97
    EQ     shift, and go to state 98
    LE     shift, and go to state 99
    GE     shift, and go to state 100
    '+'    shift, and go to state 101
    '-'    shift, and go to state 102
    '*'    shift, and go to state 103
    '/'    shift, and go to state 104
    '%'    shift, and go to state 105
    ')'    shift, and go to state 134


state 83

   79 array_list: '{' $@3 . expr_sequence '}'

    INTEGER     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    STRING      shift, and go to state 50
    FLOAT       shift, and go to state 33
    RAND        shift, and go to state 34
    SUPERCLASS  shift, and go to state 11
    DATA_TYPE   shift, and go to state 35
    STR_INPUT   shift, and go to state 36
    NEW         shift, and go to state 37
    '-'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40
    '['         shift, and go to state 41

    deref                 go to state 42
    function_call_return  go to state 43
    call_func_name        go to state 44
    array_list            go to state 48
    expr                  go to state 135
    expr_sequence         go to state 136


state 84

   80 table_list: array_list .

    $default  reduce using rule 80 (table_list)


state 85

   81 table_list: table_list . ',' array_list
  108 expr: '[' table_list . ']'

    ','  shift, and go to state 137
    ']'  shift, and go to state 138


state 86

   59 deref: deref ARROW . IDENTIFIER
   67 call_func_name: deref ARROW . IDENTIFIER
   89 expr: deref ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 139


state 87

   60 deref: deref dimension_list .
  109 expr: deref dimension_list .

    ARROW     reduce using rule 60 (deref)
    '['       reduce using rule 60 (deref)
    $default  reduce using rule 109 (expr)


state 88

   64 function_call_return: call_func_name '(' . $@2 call_param_list ')'

    $default  reduce using rule 63 ($@2)

    $@2  go to state 140


state 89

   38 stmt: PRINT complex_str ';' .

    $default  reduce using rule 38 (stmt)


state 90

   71 complex_str: ui_list STRING .
   74 ui: STRING . '[' expr ']'

    '['  shift, and go to state 76

    $default  reduce using rule 71 (complex_str)


state 91

   73 ui_list: ui_list ui .

    $default  reduce using rule 73 (ui_list)


state 92

   97 expr: expr '>' . expr

    INTEGER     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    STRING      shift, and go to state 50
    FLOAT       shift, and go to state 33
    RAND        shift, and go to state 34
    SUPERCLASS  shift, and go to state 11
    DATA_TYPE   shift, and go to state 35
    STR_INPUT   shift, and go to state 36
    NEW         shift, and go to state 37
    '-'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40
    '['         shift, and go to state 41

    deref                 go to state 42
    function_call_return  go to state 43
    call_func_name        go to state 44
    array_list            go to state 48
    expr                  go to state 141


state 93

   96 expr: expr '<' . expr

    INTEGER     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    STRING      shift, and go to state 50
    FLOAT       shift, and go to state 33
    RAND        shift, and go to state 34
    SUPERCLASS  shift, and go to state 11
    DATA_TYPE   shift, and go to state 35
    STR_INPUT   shift, and go to state 36
    NEW         shift, and go to state 37
    '-'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40
    '['         shift, and go to state 41

    deref                 go to state 42
    function_call_return  go to state 43
    call_func_name        go to state 44
    array_list            go to state 48
    expr                  go to state 142


state 94

  111 expr: expr RAND2 . expr

    INTEGER     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    STRING      shift, and go to state 50
    FLOAT       shift, and go to state 33
    RAND        shift, and go to state 34
    SUPERCLASS  shift, and go to state 11
    DATA_TYPE   shift, and go to state 35
    STR_INPUT   shift, and go to state 36
    NEW         shift, and go to state 37
    '-'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40
    '['         shift, and go to state 41

    deref                 go to state 42
    function_call_return  go to state 43
    call_func_name        go to state 44
    array_list            go to state 48
    expr                  go to state 143


state 95

   98 expr: expr AND . expr

    INTEGER     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    STRING      shift, and go to state 50
    FLOAT       shift, and go to state 33
    RAND        shift, and go to state 34
    SUPERCLASS  shift, and go to state 11
    DATA_TYPE   shift, and go to state 35
    STR_INPUT   shift, and go to state 36
    NEW         shift, and go to state 37
    '-'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40
    '['         shift, and go to state 41

    deref                 go to state 42
    function_call_return  go to state 43
    call_func_name        go to state 44
    array_list            go to state 48
    expr                  go to state 144


state 96

   99 expr: expr OR . expr

    INTEGER     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    STRING      shift, and go to state 50
    FLOAT       shift, and go to state 33
    RAND        shift, and go to state 34
    SUPERCLASS  shift, and go to state 11
    DATA_TYPE   shift, and go to state 35
    STR_INPUT   shift, and go to state 36
    NEW         shift, and go to state 37
    '-'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40
    '['         shift, and go to state 41

    deref                 go to state 42
    function_call_return  go to state 43
    call_func_name        go to state 44
    array_list            go to state 48
    expr                  go to state 145


state 97

  102 expr: expr NE . expr

    INTEGER     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    STRING      shift, and go to state 50
    FLOAT       shift, and go to state 33
    RAND        shift, and go to state 34
    SUPERCLASS  shift, and go to state 11
    DATA_TYPE   shift, and go to state 35
    STR_INPUT   shift, and go to state 36
    NEW         shift, and go to state 37
    '-'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40
    '['         shift, and go to state 41

    deref                 go to state 42
    function_call_return  go to state 43
    call_func_name        go to state 44
    array_list            go to state 48
    expr                  go to state 146


state 98

  103 expr: expr EQ . expr

    INTEGER     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    STRING      shift, and go to state 50
    FLOAT       shift, and go to state 33
    RAND        shift, and go to state 34
    SUPERCLASS  shift, and go to state 11
    DATA_TYPE   shift, and go to state 35
    STR_INPUT   shift, and go to state 36
    NEW         shift, and go to state 37
    '-'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40
    '['         shift, and go to state 41

    deref                 go to state 42
    function_call_return  go to state 43
    call_func_name        go to state 44
    array_list            go to state 48
    expr                  go to state 147


state 99

  101 expr: expr LE . expr

    INTEGER     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    STRING      shift, and go to state 50
    FLOAT       shift, and go to state 33
    RAND        shift, and go to state 34
    SUPERCLASS  shift, and go to state 11
    DATA_TYPE   shift, and go to state 35
    STR_INPUT   shift, and go to state 36
    NEW         shift, and go to state 37
    '-'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40
    '['         shift, and go to state 41

    deref                 go to state 42
    function_call_return  go to state 43
    call_func_name        go to state 44
    array_list            go to state 48
    expr                  go to state 148


state 100

  100 expr: expr GE . expr

    INTEGER     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    STRING      shift, and go to state 50
    FLOAT       shift, and go to state 33
    RAND        shift, and go to state 34
    SUPERCLASS  shift, and go to state 11
    DATA_TYPE   shift, and go to state 35
    STR_INPUT   shift, and go to state 36
    NEW         shift, and go to state 37
    '-'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40
    '['         shift, and go to state 41

    deref                 go to state 42
    function_call_return  go to state 43
    call_func_name        go to state 44
    array_list            go to state 48
    expr                  go to state 149


state 101

   91 expr: expr '+' . expr

    INTEGER     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    STRING      shift, and go to state 50
    FLOAT       shift, and go to state 33
    RAND        shift, and go to state 34
    SUPERCLASS  shift, and go to state 11
    DATA_TYPE   shift, and go to state 35
    STR_INPUT   shift, and go to state 36
    NEW         shift, and go to state 37
    '-'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40
    '['         shift, and go to state 41

    deref                 go to state 42
    function_call_return  go to state 43
    call_func_name        go to state 44
    array_list            go to state 48
    expr                  go to state 150


state 102

   92 expr: expr '-' . expr

    INTEGER     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    STRING      shift, and go to state 50
    FLOAT       shift, and go to state 33
    RAND        shift, and go to state 34
    SUPERCLASS  shift, and go to state 11
    DATA_TYPE   shift, and go to state 35
    STR_INPUT   shift, and go to state 36
    NEW         shift, and go to state 37
    '-'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40
    '['         shift, and go to state 41

    deref                 go to state 42
    function_call_return  go to state 43
    call_func_name        go to state 44
    array_list            go to state 48
    expr                  go to state 151


state 103

   93 expr: expr '*' . expr

    INTEGER     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    STRING      shift, and go to state 50
    FLOAT       shift, and go to state 33
    RAND        shift, and go to state 34
    SUPERCLASS  shift, and go to state 11
    DATA_TYPE   shift, and go to state 35
    STR_INPUT   shift, and go to state 36
    NEW         shift, and go to state 37
    '-'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40
    '['         shift, and go to state 41

    deref                 go to state 42
    function_call_return  go to state 43
    call_func_name        go to state 44
    array_list            go to state 48
    expr                  go to state 152


state 104

   94 expr: expr '/' . expr

    INTEGER     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    STRING      shift, and go to state 50
    FLOAT       shift, and go to state 33
    RAND        shift, and go to state 34
    SUPERCLASS  shift, and go to state 11
    DATA_TYPE   shift, and go to state 35
    STR_INPUT   shift, and go to state 36
    NEW         shift, and go to state 37
    '-'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40
    '['         shift, and go to state 41

    deref                 go to state 42
    function_call_return  go to state 43
    call_func_name        go to state 44
    array_list            go to state 48
    expr                  go to state 153


state 105

   95 expr: expr '%' . expr

    INTEGER     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    STRING      shift, and go to state 50
    FLOAT       shift, and go to state 33
    RAND        shift, and go to state 34
    SUPERCLASS  shift, and go to state 11
    DATA_TYPE   shift, and go to state 35
    STR_INPUT   shift, and go to state 36
    NEW         shift, and go to state 37
    '-'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40
    '['         shift, and go to state 41

    deref                 go to state 42
    function_call_return  go to state 43
    call_func_name        go to state 44
    array_list            go to state 48
    expr                  go to state 154


state 106

   37 stmt: PRINT expr ';' .

    $default  reduce using rule 37 (stmt)


state 107

   45 stmt: FN_RETURN expr ';' .

    $default  reduce using rule 45 (stmt)


state 108

   13 definition: CLASS class_name_dec HAS . data_list ';'

    IDENTIFIER  shift, and go to state 155

    data_list         go to state 156
    member_func       go to state 157
    member_func_decl  go to state 158
    member_func_name  go to state 159


state 109

   22 class_parents: BASED_ON . class_list

    IDENTIFIER  shift, and go to state 160

    class_list  go to state 161


state 110

   14 definition: CLASS class_name_dec class_parents . HAS data_list ';'

    HAS  shift, and go to state 162


state 111

   35 stmt: '{' stmt_list '}' .

    $default  reduce using rule 35 (stmt)


state 112

   48 stmt_list: stmt_list stmt .

    $default  reduce using rule 48 (stmt_list)


state 113

    4 global_statement: class_name IDENTIFIER ';' .

    $default  reduce using rule 4 (global_statement)


state 114

    5 global_statement: class_name IDENTIFIER '(' . init_list ')' ';'

    IDENTIFIER  shift, and go to state 163

    init_list    go to state 164
    init_pair    go to state 165
    data_member  go to state 166


state 115

   12 definition: function_def '{' stmt_list . '}'
   48 stmt_list: stmt_list . stmt

    error       shift, and go to state 3
    IDENTIFIER  shift, and go to state 56
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    IF          shift, and go to state 7
    PRINT       shift, and go to state 8
    FN_RETURN   shift, and go to state 9
    SUPERCLASS  shift, and go to state 11
    ';'         shift, and go to state 12
    '{'         shift, and go to state 13
    '}'         shift, and go to state 167

    stmt                      go to state 112
    assignment                go to state 20
    assignment_var_or_member  go to state 21
    deref                     go to state 22
    function_call             go to state 23
    call_func_name            go to state 24


state 116

   20 param_name: IDENTIFIER .

    $default  reduce using rule 20 (param_name)


state 117

   16 function_def: func_name '(' ')' .

    $default  reduce using rule 16 (function_def)


state 118

   15 function_def: func_name '(' param_list . ')'
   19 param_list: param_list . ',' param_name

    ','  shift, and go to state 168
    ')'  shift, and go to state 169


state 119

   18 param_list: param_name .

    $default  reduce using rule 18 (param_list)


state 120

   49 assignment: assignment_var_or_member '=' expr .
   91 expr: expr . '+' expr
   92     | expr . '-' expr
   93     | expr . '*' expr
   94     | expr . '/' expr
   95     | expr . '%' expr
   96     | expr . '<' expr
   97     | expr . '>' expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . GE expr
  101     | expr . LE expr
  102     | expr . NE expr
  103     | expr . EQ expr
  111     | expr . RAND2 expr

    '>'    shift, and go to state 92
    '<'    shift, and go to state 93
    RAND2  shift, and go to state 94
    AND    shift, and go to state 95
    OR     shift, and go to state 96
    NE     shift, and go to state 97
    EQ     shift, and go to state 98
    LE     shift, and go to state 99
    GE     shift, and go to state 100
    '+'    shift, and go to state 101
    '-'    shift, and go to state 102
    '*'    shift, and go to state 103
    '/'    shift, and go to state 104
    '%'    shift, and go to state 105

    $default  reduce using rule 49 (assignment)


state 121

   54 assignment_var_or_member: deref ARROW IDENTIFIER .
   59 deref: deref ARROW IDENTIFIER .
   67 call_func_name: deref ARROW IDENTIFIER .

    '('       reduce using rule 67 (call_func_name)
    '='       reduce using rule 54 (assignment_var_or_member)
    $default  reduce using rule 59 (deref)


state 122

   76 dimension_list: '[' expr . ']'
   77               | '[' expr . ',' expr ']'
   91 expr: expr . '+' expr
   92     | expr . '-' expr
   93     | expr . '*' expr
   94     | expr . '/' expr
   95     | expr . '%' expr
   96     | expr . '<' expr
   97     | expr . '>' expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . GE expr
  101     | expr . LE expr
  102     | expr . NE expr
  103     | expr . EQ expr
  111     | expr . RAND2 expr

    '>'    shift, and go to state 92
    '<'    shift, and go to state 93
    RAND2  shift, and go to state 94
    AND    shift, and go to state 95
    OR     shift, and go to state 96
    NE     shift, and go to state 97
    EQ     shift, and go to state 98
    LE     shift, and go to state 99
    GE     shift, and go to state 100
    '+'    shift, and go to state 101
    '-'    shift, and go to state 102
    '*'    shift, and go to state 103
    '/'    shift, and go to state 104
    '%'    shift, and go to state 105
    ','    shift, and go to state 170
    ']'    shift, and go to state 171


state 123

   62 function_call: call_func_name '(' $@1 . call_param_list ')'

    INTEGER     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    STRING      shift, and go to state 50
    FLOAT       shift, and go to state 33
    RAND        shift, and go to state 34
    SUPERCLASS  shift, and go to state 11
    DATA_TYPE   shift, and go to state 35
    STR_INPUT   shift, and go to state 36
    NEW         shift, and go to state 37
    '-'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40
    '['         shift, and go to state 41

    $default  reduce using rule 70 (call_param_list)

    deref                 go to state 42
    function_call_return  go to state 43
    call_func_name        go to state 44
    call_param_list       go to state 172
    array_list            go to state 48
    expr                  go to state 135
    expr_sequence         go to state 173


state 124

   39 stmt: WHILE '(' expr ')' . stmt

    error       shift, and go to state 3
    IDENTIFIER  shift, and go to state 56
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    IF          shift, and go to state 7
    PRINT       shift, and go to state 8
    FN_RETURN   shift, and go to state 9
    SUPERCLASS  shift, and go to state 11
    ';'         shift, and go to state 12
    '{'         shift, and go to state 13

    stmt                      go to state 174
    assignment                go to state 20
    assignment_var_or_member  go to state 21
    deref                     go to state 22
    function_call             go to state 23
    call_func_name            go to state 24


state 125

   75 for_rules: assignment ';' . expr ';' assignment

    INTEGER     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    STRING      shift, and go to state 50
    FLOAT       shift, and go to state 33
    RAND        shift, and go to state 34
    SUPERCLASS  shift, and go to state 11
    DATA_TYPE   shift, and go to state 35
    STR_INPUT   shift, and go to state 36
    NEW         shift, and go to state 37
    '-'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40
    '['         shift, and go to state 41

    deref                 go to state 42
    function_call_return  go to state 43
    call_func_name        go to state 44
    array_list            go to state 48
    expr                  go to state 175


state 126

   54 assignment_var_or_member: deref ARROW . IDENTIFIER
   59 deref: deref ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 176


state 127

   40 stmt: FOR '(' for_rules ')' . stmt

    error       shift, and go to state 3
    IDENTIFIER  shift, and go to state 56
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    IF          shift, and go to state 7
    PRINT       shift, and go to state 8
    FN_RETURN   shift, and go to state 9
    SUPERCLASS  shift, and go to state 11
    ';'         shift, and go to state 12
    '{'         shift, and go to state 13

    stmt                      go to state 177
    assignment                go to state 20
    assignment_var_or_member  go to state 21
    deref                     go to state 22
    function_call             go to state 23
    call_func_name            go to state 24


state 128

   41 stmt: IF '(' expr ')' . stmt
   42     | IF '(' expr ')' . stmt ELSE stmt

    error       shift, and go to state 3
    IDENTIFIER  shift, and go to state 56
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    IF          shift, and go to state 7
    PRINT       shift, and go to state 8
    FN_RETURN   shift, and go to state 9
    SUPERCLASS  shift, and go to state 11
    ';'         shift, and go to state 12
    '{'         shift, and go to state 13

    stmt                      go to state 178
    assignment                go to state 20
    assignment_var_or_member  go to state 21
    deref                     go to state 22
    function_call             go to state 23
    call_func_name            go to state 24


state 129

   74 ui: STRING '[' expr . ']'
   91 expr: expr . '+' expr
   92     | expr . '-' expr
   93     | expr . '*' expr
   94     | expr . '/' expr
   95     | expr . '%' expr
   96     | expr . '<' expr
   97     | expr . '>' expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . GE expr
  101     | expr . LE expr
  102     | expr . NE expr
  103     | expr . EQ expr
  111     | expr . RAND2 expr

    '>'    shift, and go to state 92
    '<'    shift, and go to state 93
    RAND2  shift, and go to state 94
    AND    shift, and go to state 95
    OR     shift, and go to state 96
    NE     shift, and go to state 97
    EQ     shift, and go to state 98
    LE     shift, and go to state 99
    GE     shift, and go to state 100
    '+'    shift, and go to state 101
    '-'    shift, and go to state 102
    '*'    shift, and go to state 103
    '/'    shift, and go to state 104
    '%'    shift, and go to state 105
    ']'    shift, and go to state 179


state 130

   56 memberOf: ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 180


state 131

   51 var_or_member: IDENTIFIER memberOf .
   57 memberOf: memberOf . ARROW IDENTIFIER

    ARROW  shift, and go to state 181

    $default  reduce using rule 51 (var_or_member)


state 132

   52 var_or_member: IDENTIFIER dimension_list .

    $default  reduce using rule 52 (var_or_member)


state 133

   88 expr: NEW class_name '(' . init_list ')'

    IDENTIFIER  shift, and go to state 163

    init_list    go to state 182
    init_pair    go to state 165
    data_member  go to state 166


state 134

  104 expr: '(' expr ')' .

    $default  reduce using rule 104 (expr)


state 135

   91 expr: expr . '+' expr
   92     | expr . '-' expr
   93     | expr . '*' expr
   94     | expr . '/' expr
   95     | expr . '%' expr
   96     | expr . '<' expr
   97     | expr . '>' expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . GE expr
  101     | expr . LE expr
  102     | expr . NE expr
  103     | expr . EQ expr
  111     | expr . RAND2 expr
  112 expr_sequence: expr .

    '>'    shift, and go to state 92
    '<'    shift, and go to state 93
    RAND2  shift, and go to state 94
    AND    shift, and go to state 95
    OR     shift, and go to state 96
    NE     shift, and go to state 97
    EQ     shift, and go to state 98
    LE     shift, and go to state 99
    GE     shift, and go to state 100
    '+'    shift, and go to state 101
    '-'    shift, and go to state 102
    '*'    shift, and go to state 103
    '/'    shift, and go to state 104
    '%'    shift, and go to state 105

    $default  reduce using rule 112 (expr_sequence)


state 136

   79 array_list: '{' $@3 expr_sequence . '}'
  113 expr_sequence: expr_sequence . ',' expr

    ','  shift, and go to state 183
    '}'  shift, and go to state 184


state 137

   81 table_list: table_list ',' . array_list

    '{'  shift, and go to state 40

    array_list  go to state 185


state 138

  108 expr: '[' table_list ']' .

    $default  reduce using rule 108 (expr)


state 139

   59 deref: deref ARROW IDENTIFIER .
   67 call_func_name: deref ARROW IDENTIFIER .
   89 expr: deref ARROW IDENTIFIER .

    ARROW     reduce using rule 59 (deref)
    '('       reduce using rule 67 (call_func_name)
    '['       reduce using rule 59 (deref)
    $default  reduce using rule 89 (expr)


state 140

   64 function_call_return: call_func_name '(' $@2 . call_param_list ')'

    INTEGER     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    STRING      shift, and go to state 50
    FLOAT       shift, and go to state 33
    RAND        shift, and go to state 34
    SUPERCLASS  shift, and go to state 11
    DATA_TYPE   shift, and go to state 35
    STR_INPUT   shift, and go to state 36
    NEW         shift, and go to state 37
    '-'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40
    '['         shift, and go to state 41

    $default  reduce using rule 70 (call_param_list)

    deref                 go to state 42
    function_call_return  go to state 43
    call_func_name        go to state 44
    call_param_list       go to state 186
    array_list            go to state 48
    expr                  go to state 135
    expr_sequence         go to state 173


state 141

   91 expr: expr . '+' expr
   92     | expr . '-' expr
   93     | expr . '*' expr
   94     | expr . '/' expr
   95     | expr . '%' expr
   96     | expr . '<' expr
   97     | expr . '>' expr
   97     | expr '>' expr .
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . GE expr
  101     | expr . LE expr
  102     | expr . NE expr
  103     | expr . EQ expr
  111     | expr . RAND2 expr

    '+'  shift, and go to state 101
    '-'  shift, and go to state 102
    '*'  shift, and go to state 103
    '/'  shift, and go to state 104
    '%'  shift, and go to state 105

    $default  reduce using rule 97 (expr)


state 142

   91 expr: expr . '+' expr
   92     | expr . '-' expr
   93     | expr . '*' expr
   94     | expr . '/' expr
   95     | expr . '%' expr
   96     | expr . '<' expr
   96     | expr '<' expr .
   97     | expr . '>' expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . GE expr
  101     | expr . LE expr
  102     | expr . NE expr
  103     | expr . EQ expr
  111     | expr . RAND2 expr

    '+'  shift, and go to state 101
    '-'  shift, and go to state 102
    '*'  shift, and go to state 103
    '/'  shift, and go to state 104
    '%'  shift, and go to state 105

    $default  reduce using rule 96 (expr)


state 143

   91 expr: expr . '+' expr
   92     | expr . '-' expr
   93     | expr . '*' expr
   94     | expr . '/' expr
   95     | expr . '%' expr
   96     | expr . '<' expr
   97     | expr . '>' expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . GE expr
  101     | expr . LE expr
  102     | expr . NE expr
  103     | expr . EQ expr
  111     | expr . RAND2 expr
  111     | expr RAND2 expr .

    '+'  shift, and go to state 101
    '-'  shift, and go to state 102
    '*'  shift, and go to state 103
    '/'  shift, and go to state 104
    '%'  shift, and go to state 105

    $default  reduce using rule 111 (expr)


state 144

   91 expr: expr . '+' expr
   92     | expr . '-' expr
   93     | expr . '*' expr
   94     | expr . '/' expr
   95     | expr . '%' expr
   96     | expr . '<' expr
   97     | expr . '>' expr
   98     | expr . AND expr
   98     | expr AND expr .
   99     | expr . OR expr
  100     | expr . GE expr
  101     | expr . LE expr
  102     | expr . NE expr
  103     | expr . EQ expr
  111     | expr . RAND2 expr

    '+'  shift, and go to state 101
    '-'  shift, and go to state 102
    '*'  shift, and go to state 103
    '/'  shift, and go to state 104
    '%'  shift, and go to state 105

    $default  reduce using rule 98 (expr)


state 145

   91 expr: expr . '+' expr
   92     | expr . '-' expr
   93     | expr . '*' expr
   94     | expr . '/' expr
   95     | expr . '%' expr
   96     | expr . '<' expr
   97     | expr . '>' expr
   98     | expr . AND expr
   99     | expr . OR expr
   99     | expr OR expr .
  100     | expr . GE expr
  101     | expr . LE expr
  102     | expr . NE expr
  103     | expr . EQ expr
  111     | expr . RAND2 expr

    '+'  shift, and go to state 101
    '-'  shift, and go to state 102
    '*'  shift, and go to state 103
    '/'  shift, and go to state 104
    '%'  shift, and go to state 105

    $default  reduce using rule 99 (expr)


state 146

   91 expr: expr . '+' expr
   92     | expr . '-' expr
   93     | expr . '*' expr
   94     | expr . '/' expr
   95     | expr . '%' expr
   96     | expr . '<' expr
   97     | expr . '>' expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . GE expr
  101     | expr . LE expr
  102     | expr . NE expr
  102     | expr NE expr .
  103     | expr . EQ expr
  111     | expr . RAND2 expr

    '+'  shift, and go to state 101
    '-'  shift, and go to state 102
    '*'  shift, and go to state 103
    '/'  shift, and go to state 104
    '%'  shift, and go to state 105

    $default  reduce using rule 102 (expr)


state 147

   91 expr: expr . '+' expr
   92     | expr . '-' expr
   93     | expr . '*' expr
   94     | expr . '/' expr
   95     | expr . '%' expr
   96     | expr . '<' expr
   97     | expr . '>' expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . GE expr
  101     | expr . LE expr
  102     | expr . NE expr
  103     | expr . EQ expr
  103     | expr EQ expr .
  111     | expr . RAND2 expr

    '+'  shift, and go to state 101
    '-'  shift, and go to state 102
    '*'  shift, and go to state 103
    '/'  shift, and go to state 104
    '%'  shift, and go to state 105

    $default  reduce using rule 103 (expr)


state 148

   91 expr: expr . '+' expr
   92     | expr . '-' expr
   93     | expr . '*' expr
   94     | expr . '/' expr
   95     | expr . '%' expr
   96     | expr . '<' expr
   97     | expr . '>' expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . GE expr
  101     | expr . LE expr
  101     | expr LE expr .
  102     | expr . NE expr
  103     | expr . EQ expr
  111     | expr . RAND2 expr

    '+'  shift, and go to state 101
    '-'  shift, and go to state 102
    '*'  shift, and go to state 103
    '/'  shift, and go to state 104
    '%'  shift, and go to state 105

    $default  reduce using rule 101 (expr)


state 149

   91 expr: expr . '+' expr
   92     | expr . '-' expr
   93     | expr . '*' expr
   94     | expr . '/' expr
   95     | expr . '%' expr
   96     | expr . '<' expr
   97     | expr . '>' expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . GE expr
  100     | expr GE expr .
  101     | expr . LE expr
  102     | expr . NE expr
  103     | expr . EQ expr
  111     | expr . RAND2 expr

    '+'  shift, and go to state 101
    '-'  shift, and go to state 102
    '*'  shift, and go to state 103
    '/'  shift, and go to state 104
    '%'  shift, and go to state 105

    $default  reduce using rule 100 (expr)


state 150

   91 expr: expr . '+' expr
   91     | expr '+' expr .
   92     | expr . '-' expr
   93     | expr . '*' expr
   94     | expr . '/' expr
   95     | expr . '%' expr
   96     | expr . '<' expr
   97     | expr . '>' expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . GE expr
  101     | expr . LE expr
  102     | expr . NE expr
  103     | expr . EQ expr
  111     | expr . RAND2 expr

    '*'  shift, and go to state 103
    '/'  shift, and go to state 104
    '%'  shift, and go to state 105

    $default  reduce using rule 91 (expr)


state 151

   91 expr: expr . '+' expr
   92     | expr . '-' expr
   92     | expr '-' expr .
   93     | expr . '*' expr
   94     | expr . '/' expr
   95     | expr . '%' expr
   96     | expr . '<' expr
   97     | expr . '>' expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . GE expr
  101     | expr . LE expr
  102     | expr . NE expr
  103     | expr . EQ expr
  111     | expr . RAND2 expr

    '*'  shift, and go to state 103
    '/'  shift, and go to state 104
    '%'  shift, and go to state 105

    $default  reduce using rule 92 (expr)


state 152

   91 expr: expr . '+' expr
   92     | expr . '-' expr
   93     | expr . '*' expr
   93     | expr '*' expr .
   94     | expr . '/' expr
   95     | expr . '%' expr
   96     | expr . '<' expr
   97     | expr . '>' expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . GE expr
  101     | expr . LE expr
  102     | expr . NE expr
  103     | expr . EQ expr
  111     | expr . RAND2 expr

    $default  reduce using rule 93 (expr)


state 153

   91 expr: expr . '+' expr
   92     | expr . '-' expr
   93     | expr . '*' expr
   94     | expr . '/' expr
   94     | expr '/' expr .
   95     | expr . '%' expr
   96     | expr . '<' expr
   97     | expr . '>' expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . GE expr
  101     | expr . LE expr
  102     | expr . NE expr
  103     | expr . EQ expr
  111     | expr . RAND2 expr

    $default  reduce using rule 94 (expr)


state 154

   91 expr: expr . '+' expr
   92     | expr . '-' expr
   93     | expr . '*' expr
   94     | expr . '/' expr
   95     | expr . '%' expr
   95     | expr '%' expr .
   96     | expr . '<' expr
   97     | expr . '>' expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . GE expr
  101     | expr . LE expr
  102     | expr . NE expr
  103     | expr . EQ expr
  111     | expr . RAND2 expr

    $default  reduce using rule 95 (expr)


state 155

   25 data_list: IDENTIFIER .
   33 member_func_name: IDENTIFIER .

    '('       reduce using rule 33 (member_func_name)
    $default  reduce using rule 25 (data_list)


state 156

   13 definition: CLASS class_name_dec HAS data_list . ';'
   26 data_list: data_list . ',' IDENTIFIER
   28          | data_list . ',' member_func

    ','  shift, and go to state 187
    ';'  shift, and go to state 188


state 157

   27 data_list: member_func .

    $default  reduce using rule 27 (data_list)


state 158

   29 member_func: member_func_decl . '{' stmt_list '}'
   30            | member_func_decl . '{' '}'

    '{'  shift, and go to state 189


state 159

   31 member_func_decl: member_func_name . '(' param_list ')'
   32                 | member_func_name . '(' ')'

    '('  shift, and go to state 190


state 160

   23 class_list: IDENTIFIER .

    $default  reduce using rule 23 (class_list)


state 161

   22 class_parents: BASED_ON class_list .
   24 class_list: class_list . ',' IDENTIFIER

    ','  shift, and go to state 191

    $default  reduce using rule 22 (class_parents)


state 162

   14 definition: CLASS class_name_dec class_parents HAS . data_list ';'

    IDENTIFIER  shift, and go to state 155

    data_list         go to state 192
    member_func       go to state 157
    member_func_decl  go to state 158
    member_func_name  go to state 159


state 163

   11 data_member: IDENTIFIER .

    $default  reduce using rule 11 (data_member)


state 164

    5 global_statement: class_name IDENTIFIER '(' init_list . ')' ';'
    9 init_list: init_list . ',' init_pair

    ','  shift, and go to state 193
    ')'  shift, and go to state 194


state 165

    8 init_list: init_pair .

    $default  reduce using rule 8 (init_list)


state 166

   10 init_pair: data_member . expr

    INTEGER     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    STRING      shift, and go to state 50
    FLOAT       shift, and go to state 33
    RAND        shift, and go to state 34
    SUPERCLASS  shift, and go to state 11
    DATA_TYPE   shift, and go to state 35
    STR_INPUT   shift, and go to state 36
    NEW         shift, and go to state 37
    '-'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40
    '['         shift, and go to state 41

    deref                 go to state 42
    function_call_return  go to state 43
    call_func_name        go to state 44
    array_list            go to state 48
    expr                  go to state 195


state 167

   12 definition: function_def '{' stmt_list '}' .

    $default  reduce using rule 12 (definition)


state 168

   19 param_list: param_list ',' . param_name

    IDENTIFIER  shift, and go to state 116

    param_name  go to state 196


state 169

   15 function_def: func_name '(' param_list ')' .

    $default  reduce using rule 15 (function_def)


state 170

   77 dimension_list: '[' expr ',' . expr ']'

    INTEGER     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    STRING      shift, and go to state 50
    FLOAT       shift, and go to state 33
    RAND        shift, and go to state 34
    SUPERCLASS  shift, and go to state 11
    DATA_TYPE   shift, and go to state 35
    STR_INPUT   shift, and go to state 36
    NEW         shift, and go to state 37
    '-'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40
    '['         shift, and go to state 41

    deref                 go to state 42
    function_call_return  go to state 43
    call_func_name        go to state 44
    array_list            go to state 48
    expr                  go to state 197


state 171

   76 dimension_list: '[' expr ']' .

    $default  reduce using rule 76 (dimension_list)


state 172

   62 function_call: call_func_name '(' $@1 call_param_list . ')'

    ')'  shift, and go to state 198


state 173

   69 call_param_list: expr_sequence .
  113 expr_sequence: expr_sequence . ',' expr

    ','  shift, and go to state 183

    $default  reduce using rule 69 (call_param_list)


state 174

   39 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 39 (stmt)


state 175

   75 for_rules: assignment ';' expr . ';' assignment
   91 expr: expr . '+' expr
   92     | expr . '-' expr
   93     | expr . '*' expr
   94     | expr . '/' expr
   95     | expr . '%' expr
   96     | expr . '<' expr
   97     | expr . '>' expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . GE expr
  101     | expr . LE expr
  102     | expr . NE expr
  103     | expr . EQ expr
  111     | expr . RAND2 expr

    '>'    shift, and go to state 92
    '<'    shift, and go to state 93
    RAND2  shift, and go to state 94
    AND    shift, and go to state 95
    OR     shift, and go to state 96
    NE     shift, and go to state 97
    EQ     shift, and go to state 98
    LE     shift, and go to state 99
    GE     shift, and go to state 100
    '+'    shift, and go to state 101
    '-'    shift, and go to state 102
    '*'    shift, and go to state 103
    '/'    shift, and go to state 104
    '%'    shift, and go to state 105
    ';'    shift, and go to state 199


state 176

   54 assignment_var_or_member: deref ARROW IDENTIFIER .
   59 deref: deref ARROW IDENTIFIER .

    '='       reduce using rule 54 (assignment_var_or_member)
    $default  reduce using rule 59 (deref)


state 177

   40 stmt: FOR '(' for_rules ')' stmt .

    $default  reduce using rule 40 (stmt)


state 178

   41 stmt: IF '(' expr ')' stmt .
   42     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 200

    $default  reduce using rule 41 (stmt)


state 179

   74 ui: STRING '[' expr ']' .

    $default  reduce using rule 74 (ui)


state 180

   56 memberOf: ARROW IDENTIFIER .

    $default  reduce using rule 56 (memberOf)


state 181

   57 memberOf: memberOf ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 201


state 182

    9 init_list: init_list . ',' init_pair
   88 expr: NEW class_name '(' init_list . ')'

    ','  shift, and go to state 193
    ')'  shift, and go to state 202


state 183

  113 expr_sequence: expr_sequence ',' . expr

    INTEGER     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    STRING      shift, and go to state 50
    FLOAT       shift, and go to state 33
    RAND        shift, and go to state 34
    SUPERCLASS  shift, and go to state 11
    DATA_TYPE   shift, and go to state 35
    STR_INPUT   shift, and go to state 36
    NEW         shift, and go to state 37
    '-'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40
    '['         shift, and go to state 41

    deref                 go to state 42
    function_call_return  go to state 43
    call_func_name        go to state 44
    array_list            go to state 48
    expr                  go to state 203


state 184

   79 array_list: '{' $@3 expr_sequence '}' .

    $default  reduce using rule 79 (array_list)


state 185

   81 table_list: table_list ',' array_list .

    $default  reduce using rule 81 (table_list)


state 186

   64 function_call_return: call_func_name '(' $@2 call_param_list . ')'

    ')'  shift, and go to state 204


state 187

   26 data_list: data_list ',' . IDENTIFIER
   28          | data_list ',' . member_func

    IDENTIFIER  shift, and go to state 205

    member_func       go to state 206
    member_func_decl  go to state 158
    member_func_name  go to state 159


state 188

   13 definition: CLASS class_name_dec HAS data_list ';' .

    $default  reduce using rule 13 (definition)


state 189

   29 member_func: member_func_decl '{' . stmt_list '}'
   30            | member_func_decl '{' . '}'

    error       shift, and go to state 3
    IDENTIFIER  shift, and go to state 56
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    IF          shift, and go to state 7
    PRINT       shift, and go to state 8
    FN_RETURN   shift, and go to state 9
    SUPERCLASS  shift, and go to state 11
    ';'         shift, and go to state 12
    '{'         shift, and go to state 13
    '}'         shift, and go to state 207

    stmt                      go to state 57
    stmt_list                 go to state 208
    assignment                go to state 20
    assignment_var_or_member  go to state 21
    deref                     go to state 22
    function_call             go to state 23
    call_func_name            go to state 24


state 190

   31 member_func_decl: member_func_name '(' . param_list ')'
   32                 | member_func_name '(' . ')'

    IDENTIFIER  shift, and go to state 116
    ')'         shift, and go to state 209

    param_list  go to state 210
    param_name  go to state 119


state 191

   24 class_list: class_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 211


state 192

   14 definition: CLASS class_name_dec class_parents HAS data_list . ';'
   26 data_list: data_list . ',' IDENTIFIER
   28          | data_list . ',' member_func

    ','  shift, and go to state 187
    ';'  shift, and go to state 212


state 193

    9 init_list: init_list ',' . init_pair

    IDENTIFIER  shift, and go to state 163

    init_pair    go to state 213
    data_member  go to state 166


state 194

    5 global_statement: class_name IDENTIFIER '(' init_list ')' . ';'

    ';'  shift, and go to state 214


state 195

   10 init_pair: data_member expr .
   91 expr: expr . '+' expr
   92     | expr . '-' expr
   93     | expr . '*' expr
   94     | expr . '/' expr
   95     | expr . '%' expr
   96     | expr . '<' expr
   97     | expr . '>' expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . GE expr
  101     | expr . LE expr
  102     | expr . NE expr
  103     | expr . EQ expr
  111     | expr . RAND2 expr

    '>'    shift, and go to state 92
    '<'    shift, and go to state 93
    RAND2  shift, and go to state 94
    AND    shift, and go to state 95
    OR     shift, and go to state 96
    NE     shift, and go to state 97
    EQ     shift, and go to state 98
    LE     shift, and go to state 99
    GE     shift, and go to state 100
    '+'    shift, and go to state 101
    '-'    shift, and go to state 102
    '*'    shift, and go to state 103
    '/'    shift, and go to state 104
    '%'    shift, and go to state 105

    $default  reduce using rule 10 (init_pair)


state 196

   19 param_list: param_list ',' param_name .

    $default  reduce using rule 19 (param_list)


state 197

   77 dimension_list: '[' expr ',' expr . ']'
   91 expr: expr . '+' expr
   92     | expr . '-' expr
   93     | expr . '*' expr
   94     | expr . '/' expr
   95     | expr . '%' expr
   96     | expr . '<' expr
   97     | expr . '>' expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . GE expr
  101     | expr . LE expr
  102     | expr . NE expr
  103     | expr . EQ expr
  111     | expr . RAND2 expr

    '>'    shift, and go to state 92
    '<'    shift, and go to state 93
    RAND2  shift, and go to state 94
    AND    shift, and go to state 95
    OR     shift, and go to state 96
    NE     shift, and go to state 97
    EQ     shift, and go to state 98
    LE     shift, and go to state 99
    GE     shift, and go to state 100
    '+'    shift, and go to state 101
    '-'    shift, and go to state 102
    '*'    shift, and go to state 103
    '/'    shift, and go to state 104
    '%'    shift, and go to state 105
    ']'    shift, and go to state 215


state 198

   62 function_call: call_func_name '(' $@1 call_param_list ')' .

    $default  reduce using rule 62 (function_call)


state 199

   75 for_rules: assignment ';' expr ';' . assignment

    IDENTIFIER  shift, and go to state 71

    assignment                go to state 216
    assignment_var_or_member  go to state 21
    deref                     go to state 73


state 200

   42 stmt: IF '(' expr ')' stmt ELSE . stmt

    error       shift, and go to state 3
    IDENTIFIER  shift, and go to state 56
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    IF          shift, and go to state 7
    PRINT       shift, and go to state 8
    FN_RETURN   shift, and go to state 9
    SUPERCLASS  shift, and go to state 11
    ';'         shift, and go to state 12
    '{'         shift, and go to state 13

    stmt                      go to state 217
    assignment                go to state 20
    assignment_var_or_member  go to state 21
    deref                     go to state 22
    function_call             go to state 23
    call_func_name            go to state 24


state 201

   57 memberOf: memberOf ARROW IDENTIFIER .

    $default  reduce using rule 57 (memberOf)


state 202

   88 expr: NEW class_name '(' init_list ')' .

    $default  reduce using rule 88 (expr)


state 203

   91 expr: expr . '+' expr
   92     | expr . '-' expr
   93     | expr . '*' expr
   94     | expr . '/' expr
   95     | expr . '%' expr
   96     | expr . '<' expr
   97     | expr . '>' expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . GE expr
  101     | expr . LE expr
  102     | expr . NE expr
  103     | expr . EQ expr
  111     | expr . RAND2 expr
  113 expr_sequence: expr_sequence ',' expr .

    '>'    shift, and go to state 92
    '<'    shift, and go to state 93
    RAND2  shift, and go to state 94
    AND    shift, and go to state 95
    OR     shift, and go to state 96
    NE     shift, and go to state 97
    EQ     shift, and go to state 98
    LE     shift, and go to state 99
    GE     shift, and go to state 100
    '+'    shift, and go to state 101
    '-'    shift, and go to state 102
    '*'    shift, and go to state 103
    '/'    shift, and go to state 104
    '%'    shift, and go to state 105

    $default  reduce using rule 113 (expr_sequence)


state 204

   64 function_call_return: call_func_name '(' $@2 call_param_list ')' .

    $default  reduce using rule 64 (function_call_return)


state 205

   26 data_list: data_list ',' IDENTIFIER .
   33 member_func_name: IDENTIFIER .

    '('       reduce using rule 33 (member_func_name)
    $default  reduce using rule 26 (data_list)


state 206

   28 data_list: data_list ',' member_func .

    $default  reduce using rule 28 (data_list)


state 207

   30 member_func: member_func_decl '{' '}' .

    $default  reduce using rule 30 (member_func)


state 208

   29 member_func: member_func_decl '{' stmt_list . '}'
   48 stmt_list: stmt_list . stmt

    error       shift, and go to state 3
    IDENTIFIER  shift, and go to state 56
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    IF          shift, and go to state 7
    PRINT       shift, and go to state 8
    FN_RETURN   shift, and go to state 9
    SUPERCLASS  shift, and go to state 11
    ';'         shift, and go to state 12
    '{'         shift, and go to state 13
    '}'         shift, and go to state 218

    stmt                      go to state 112
    assignment                go to state 20
    assignment_var_or_member  go to state 21
    deref                     go to state 22
    function_call             go to state 23
    call_func_name            go to state 24


state 209

   32 member_func_decl: member_func_name '(' ')' .

    $default  reduce using rule 32 (member_func_decl)


state 210

   19 param_list: param_list . ',' param_name
   31 member_func_decl: member_func_name '(' param_list . ')'

    ','  shift, and go to state 168
    ')'  shift, and go to state 219


state 211

   24 class_list: class_list ',' IDENTIFIER .

    $default  reduce using rule 24 (class_list)


state 212

   14 definition: CLASS class_name_dec class_parents HAS data_list ';' .

    $default  reduce using rule 14 (definition)


state 213

    9 init_list: init_list ',' init_pair .

    $default  reduce using rule 9 (init_list)


state 214

    5 global_statement: class_name IDENTIFIER '(' init_list ')' ';' .

    $default  reduce using rule 5 (global_statement)


state 215

   77 dimension_list: '[' expr ',' expr ']' .

    $default  reduce using rule 77 (dimension_list)


state 216

   75 for_rules: assignment ';' expr ';' assignment .

    $default  reduce using rule 75 (for_rules)


state 217

   42 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 42 (stmt)


state 218

   29 member_func: member_func_decl '{' stmt_list '}' .

    $default  reduce using rule 29 (member_func)


state 219

   31 member_func_decl: member_func_name '(' param_list ')' .

    $default  reduce using rule 31 (member_func_decl)
